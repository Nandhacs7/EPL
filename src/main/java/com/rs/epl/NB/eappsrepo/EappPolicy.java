package com.rs.epl.NB.eappsrepo;

import java.math.BigDecimal;
import java.util.List;

//import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.transaction.annotation.Transactional;

import com.rs.epl.eapps.receiptmaster.Partiesinpolicy;


public interface EappPolicy extends JpaRepository<Partiesinpolicy, Long> {
	
	
	@Query(value = "SELECT '' POLID,TO_CHAR(TO_DATE(INS.lastmodifiedtime,'dd/mm/yyyy HH24:mi:ss'),'dd/mm/yyyy') ACCOUNT_DATE,INS.AGENTCODE,INS.AGENTNAME,'' BATCHID,''BATCHNAME,''BATCHUSER,INS.BDOCODE,INS.BDONAME,INS.BRANCHCODE,RBM.BRANCH_NAME,'' CHANNELOFBUSINESS,''COREPRODUCTNAME,INS.COVERNOTENUMBER,INS.COVERNOTEPREMIUM,''CREATEDUSER,''CREATEDUSERTYPE,TO_CHAR(TO_DATE(CREATIONDATE,'DD/MM/YYYY HH24:MI:SS'),'DD/MM/YYYY') CREATIONDATE,TO_CHAR(TO_DATE(INCEPTIONDATE,'DD/MM/YYYY HH24:MI:SS'),'DD/MM/YYYY') EFFECTIVEDATE,''ENDORSEMENTDATE,''ENDORSEMENTNAME,''ENDORSEMENTTYPE,''ENDORSEMENTPREMIUM,''ENDTNO,'EAPPS' FROMSYSTEM,''INSTALLMENTAMOUNT,''INSTALLMENTAPPLICABLE,''INSTALLMENTFREQUENCY,''ISAUTORENEWAL,''ISLATESTVERSION,''ISPORTABLEPOLICY,''ISPRINTGENERATED,''ISPRINTINDMS,''ISRENEWALDONE,''LINEOFBUSINESS,''MODEOFBUSINESS,''MODIFIEDDATE,''MOIFIEDBY,''NOOFINSTALLMENTS,1 NOOFITEM,''NOOFPAIDINSTALLMENTS,INS.OACODE OACODE,''PAIDAMOUNT,''PLANNAME,'235959'POLEXPTIME,REPLACE(SUBSTR(INS.INCEPTIONDATE,INSTR(INS.INCEPTIONDATE,' ')+1,20),':','')POLSTARTTIME,INS.EXPIRYDATE POLEXPIRYDATE,INS.NETCHANGEAMOUNT POLICYPREMIUM,case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='0' then 'V05'else case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='1500.0' then 'V09'else case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='2500.0' then 'V01'else case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='5000.0' then 'V02'else case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='7500.0' then 'V03'else case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='10000.0' then 'V08'else case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='15000.0' then 'V04'end end end end end end end POLICYSTATUS,ppc.STATEDVALUEOFVEHICLE+premium_limit.COMP_LIMIT(ins.id,'NonElectricalLimit')+premium_limit.COMP_LIMIT(ins.id,'ElectricalAccessoriesLimit')+premium_limit.COMP_LIMIT(ins.id,'CNG_LPGLimit')POLICYSUMINSUREDAMOUNT,substr(ins.policycode,1,10) POLNO,TO_CHAR(TO_DATE(INS.inceptiondate,'dd/mm/yyyy HH24:mi:ss'),'dd/mm/yyyy') POLSTARTDATE,ppc.PREVIOUSPOLICYNO PREVIOUSPOLNO,xg.XGEN_PRODUCT_NAME PRODUCTCODE,ins.PRODUCTDISPLAYNAME,ins.PRODUCTNAME,nvl(io.INWARD_DATE,TO_CHAR(TO_DATE(INS.creationdate,'dd/mm/yyyy HH24:mi:ss'),'dd/mm/yyyy')) PROPOSALDATE,''PROPOSALNO,INS.QUOTENUMBER QUOTENO,''RATINGPRODUCTNAME,''SHORTFALLAMOUNT,''SUBLINE,''SUBPLANNAME,''TPACHARGES,''TPACODE,''TPANAME,ins.TRANSACTIONTYPE,INS.UWYR,''VERSIONNO,''POLCLIENTID,''PRODUCTID,''MFGNAME,ins.REFERENCE_CODE MFGCODE FROM INSURANCEPOLICY INS,RSBRANCHMASTER RBM,privatepassengercar ppc,product xg,INSURANCEOAAGENT io WHERE INS.BRANCHCODE=RBM.BRANCH_CODE and ins.id=ppc.id and xg.productname=ins.productname and io.id=INS.OADETAILS_ID and ins.ID=?1", nativeQuery = true)
    Object PolicyObj(Long  P);
	
	@Query(value = "SELECT '' POLID,TO_CHAR(TO_DATE(INS.lastmodifiedtime,'dd/mm/yyyy HH24:mi:ss'),'dd/mm/yyyy') ACCOUNT_DATE,INS.AGENTCODE,INS.AGENTNAME,'' BATCHID,''BATCHNAME,''BATCHUSER,INS.BDOCODE,INS.BDONAME,INS.BRANCHCODE,RBM.BRANCH_NAME,'' CHANNELOFBUSINESS,''COREPRODUCTNAME,INS.COVERNOTENUMBER,INS.COVERNOTEPREMIUM,''CREATEDUSER,''CREATEDUSERTYPE,TO_CHAR(TO_DATE(CREATIONDATE,'DD/MM/YYYY HH24:MI:SS'),'DD/MM/YYYY') CREATIONDATE,TO_CHAR(TO_DATE(INCEPTIONDATE,'DD/MM/YYYY HH24:MI:SS'),'DD/MM/YYYY') EFFECTIVEDATE,''ENDORSEMENTDATE,''ENDORSEMENTNAME,''ENDORSEMENTTYPE,''ENDORSEMENTPREMIUM,''ENDTNO,'EAPPS'FROMSYSTEM,''INSTALLMENTAMOUNT,''INSTALLMENTAPPLICABLE,''INSTALLMENTFREQUENCY,''ISAUTORENEWAL,''ISLATESTVERSION,''ISPORTABLEPOLICY,''ISPRINTGENERATED,''ISPRINTINDMS,''ISRENEWALDONE,''LINEOFBUSINESS,''MODEOFBUSINESS,''MODIFIEDDATE,''MOIFIEDBY,''NOOFINSTALLMENTS,1 NOOFITEM,''NOOFPAIDINSTALLMENTS,INS.OACODE OACODE,''PAIDAMOUNT,''PLANNAME,'235959'POLEXPTIME,REPLACE(SUBSTR(INS.INCEPTIONDATE,INSTR(INS.INCEPTIONDATE,' ')+1,20),':','')POLSTARTTIME,INS.EXPIRYDATE POLEXPIRYDATE,INS.NETCHANGEAMOUNT POLICYPREMIUM,case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='0' then 'V05' else case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='1500.0' then 'V09' else case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='2500.0' then 'V01' else case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='5000.0' then 'V02' else case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='7500.0' then 'V03' else case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='10000.0' then 'V08' else case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='15000.0' then 'V04' end end end end end end end POLICYSTATUS,ppc.STATEDVALUEOFVEHICLE+premium_limit.COMP_LIMIT(ins.id,'NonElectricalLimit')+premium_limit.COMP_LIMIT(ins.id,'ElectricalAccessoriesLimit')+premium_limit.COMP_LIMIT(ins.id,'CNG_LPGLimit')POLICYSUMINSUREDAMOUNT,substr(ins.policycode,1,10) POLNO,TO_CHAR(TO_DATE(INS.inceptiondate,'dd/mm/yyyy HH24:mi:ss'),'dd/mm/yyyy') POLSTARTDATE,ppc.PREVIOUSPOLICYNO PREVIOUSPOLNO,CASE WHEN NVL(ppc.Typeofvehicle,'X') IN ('Agricultural Tractors','Non Agricultural Tractors') THEN 'VFA' ELSE xg.XGEN_PRODUCT_NAME END PRODUCTCODE,ins.PRODUCTDISPLAYNAME,ins.PRODUCTNAME,nvl(io.INWARD_DATE,TO_CHAR(TO_DATE(INS.creationdate,'dd/mm/yyyy HH24:mi:ss'),'dd/mm/yyyy')) PROPOSALDATE,''PROPOSALNO,INS.QUOTENUMBER QUOTENO,''RATINGPRODUCTNAME,''SHORTFALLAMOUNT,''SUBLINE,''SUBPLANNAME,''TPACHARGES,''TPACODE,''TPANAME,ins.TRANSACTIONTYPE,INS.UWYR,''VERSIONNO,''POLCLIENTID,''PRODUCTID,''MFGNAME,INS.REFERENCE_CODE MFGCODE FROM INSURANCEPOLICY INS,RSBRANCHMASTER RBM,commercialvehicle ppc,product xg,INSURANCEOAAGENT io WHERE INS.BRANCHCODE=RBM.BRANCH_CODE and ins.id=ppc.id and xg.productname=ins.productname and io.id=INS.OADETAILS_ID AND INS.ID=?1", nativeQuery = true)
	Object VPCVPolicy(Long s);
	
	@Query(value = "SELECT '' POLID,TO_CHAR(TO_DATE(INS.lastmodifiedtime,'dd/mm/yyyy HH24:mi:ss'),'dd/mm/yyyy') ACCOUNT_DATE,INS.AGENTCODE,INS.AGENTNAME,'' BATCHID,''BATCHNAME,''BATCHUSER,INS.BDOCODE,INS.BDONAME,INS.BRANCHCODE,RBM.BRANCH_NAME,'' CHANNELOFBUSINESS,''COREPRODUCTNAME,INS.COVERNOTENUMBER,INS.COVERNOTEPREMIUM,''CREATEDUSER,''CREATEDUSERTYPE,TO_CHAR(TO_DATE(CREATIONDATE,'DD/MM/YYYY HH24:MI:SS'),'DD/MM/YYYY') CREATIONDATE,TO_CHAR(TO_DATE(INCEPTIONDATE,'DD/MM/YYYY HH24:MI:SS'),'DD/MM/YYYY') EFFECTIVEDATE,''ENDORSEMENTDATE,''ENDORSEMENTNAME,''ENDORSEMENTTYPE,''ENDORSEMENTPREMIUM,''ENDTNO,'EAPPS' FROMSYSTEM,''INSTALLMENTAMOUNT,''INSTALLMENTAPPLICABLE,''INSTALLMENTFREQUENCY,''ISAUTORENEWAL,''ISLATESTVERSION,''ISPORTABLEPOLICY,''ISPRINTGENERATED,''ISPRINTINDMS,''ISRENEWALDONE,''LINEOFBUSINESS,''MODEOFBUSINESS,''MODIFIEDDATE,''MOIFIEDBY,''NOOFINSTALLMENTS,1 NOOFITEM,''NOOFPAIDINSTALLMENTS,INS.OACODE OACODE,''PAIDAMOUNT,''PLANNAME,'235959'POLEXPTIME,REPLACE(SUBSTR(INS.INCEPTIONDATE,INSTR(INS.INCEPTIONDATE,' ')+1,20),':','')POLSTARTTIME,INS.EXPIRYDATE POLEXPIRYDATE,INS.NETCHANGEAMOUNT POLICYPREMIUM,case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='0' then 'V05'else case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='1500.0' then 'V09'else case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='2500.0' then 'V01'else case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='5000.0' then 'V02'else case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='7500.0' then 'V03'else case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='10000.0' then 'V08'else case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='15000.0' then 'V04'end end end end end end end POLICYSTATUS,ppc.IDV+premium_limit.COMP_LIMIT(ins.id,'NonElectricalLimit')+premium_limit.COMP_LIMIT(ins.id,'ElectricalAccessoriesLimit')+premium_limit.COMP_LIMIT(ins.id,'CNG_LPGLimit')POLICYSUMINSUREDAMOUNT,substr(ins.policycode,1,10) POLNO,TO_CHAR(TO_DATE(INS.inceptiondate,'dd/mm/yyyy HH24:mi:ss'),'dd/mm/yyyy') POLSTARTDATE,ppc.PREVIOUSPOLICYNO PREVIOUSPOLNO,xg.XGEN_PRODUCT_NAME PRODUCTCODE,ins.PRODUCTDISPLAYNAME,ins.PRODUCTNAME,nvl(io.INWARD_DATE,TO_CHAR(TO_DATE(INS.creationdate,'dd/mm/yyyy HH24:mi:ss'),'dd/mm/yyyy')) PROPOSALDATE,''PROPOSALNO,INS.QUOTENUMBER QUOTENO,''RATINGPRODUCTNAME,''SHORTFALLAMOUNT,''SUBLINE,''SUBPLANNAME,''TPACHARGES,''TPACODE,''TPANAME,ins.TRANSACTIONTYPE,INS.UWYR,''VERSIONNO,''POLCLIENTID,''PRODUCTID,''MFGNAME,INS.REFERENCE_CODE MFGCODE FROM INSURANCEPOLICY INS,RSBRANCHMASTER RBM,motorcycle ppc,product xg,INSURANCEOAAGENT io WHERE INS.BRANCHCODE=RBM.BRANCH_CODE and ins.id=ppc.id and xg.productname=ins.productname and io.id=INS.OADETAILS_ID and INS.id=?1", nativeQuery = true)
	Object MotorCyclePolicy(Long s);
	
//	@Query(value = "SELECT '' POLID,TO_CHAR(TO_DATE(INS.lastmodifiedtime,'dd/mm/yyyy HH24:mi:ss'),'dd/mm/yyyy') ACCOUNT_DATE,INS.AGENTCODE,INS.AGENTNAME,'' BATCHID,''BATCHNAME,''BATCHUSER,INS.BDOCODE,INS.BDONAME,INS.BRANCHCODE,RBM.BRANCH_NAME,'' CHANNELOFBUSINESS,''COREPRODUCTNAME,INS.COVERNOTENUMBER,INS.COVERNOTEPREMIUM,''CREATEDUSER,''CREATEDUSERTYPE,''CREATIONDATE,''EFFECTIVEDATE,''ENDORSEMENTDATE,''ENDORSEMENTNAME,''ENDORSEMENTTYPE,''ENDORSEMENTPREMIUM,''ENDTNO,'EAPPS'FROMSYSTEM,''INSTALLMENTAMOUNT,''INSTALLMENTAPPLICABLE,''INSTALLMENTFREQUENCY,''ISAUTORENEWAL,''ISLATESTVERSION,''ISPORTABLEPOLICY,''ISPRINTGENERATED,''ISPRINTINDMS,''ISRENEWALDONE,''LINEOFBUSINESS,''MODEOFBUSINESS,''MODIFIEDDATE,''MOIFIEDBY,''NOOFINSTALLMENTS,1 NOOFITEM,''NOOFPAIDINSTALLMENTS,INS.OACODE OACODE,''PAIDAMOUNT,''PLANNAME,'235959'POLEXPTIME,REPLACE(SUBSTR(INS.INCEPTIONDATE,INSTR(INS.INCEPTIONDATE,' ')+1,20),':','')POLSTARTTIME,INS.EXPIRYDATE POLEXPIRYDATE,INS.NETCHANGEAMOUNT POLICYPREMIUM,case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='0' then 'V05'else case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='1500.0' then 'V09'else case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='2500.0' then 'V01'else case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='5000.0' then 'V02' else case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='7500.0' then 'V03'else case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='10000.0' then 'V08' else case when premium_limit.comp_ded(ins.id,'VoluntaryDeductible')='15000.0' then 'V04' end end end end end end end POLICYSTATUS,ppc.STATEDVALUEOFVEHICLE+ premium_limit.COMP_LIMIT(ins.id,'NonElectricalLimit')+ premium_limit.COMP_LIMIT(ins.id,'ElectricalAccessoriesLimit')+ premium_limit.COMP_LIMIT(ins.id,'CNG_LPGLimit')POLICYSUMINSUREDAMOUNT, substr(ins.policycode,1,10) POLNO,TO_CHAR(TO_DATE(INS.inceptiondate,'dd/mm/yyyy HH24:mi:ss'),'dd/mm/yyyy') POLSTARTDATE,ppc.PREVIOUSPOLICYNO PREVIOUSPOLNO,xg.XGEN_PRODUCT_NAME PRODUCTCODE,ins.PRODUCTDISPLAYNAME,ins.PRODUCTNAME,nvl(io.INWARD_DATE,TO_CHAR(TO_DATE(INS.creationdate,'dd/mm/yyyy HH24:mi:ss'),'dd/mm/yyyy')) PROPOSALDATE,''PROPOSALNO,INS.QUOTENUMBER QUOTENO,''RATINGPRODUCTNAME,''SHORTFALLAMOUNT,''SUBLINE,''SUBPLANNAME,''TPACHARGES,''TPACODE,''TPANAME,ins.TRANSACTIONTYPE,INS.UWYR,''VERSIONNO,''POLCLIENTID,''PRODUCTID,''MFGNAME,''MFGCODE FROM INSURANCEPOLICY INS,RSBRANCHMASTER RBM,commercialvehicle ppc,product xg,INSURANCEOAAGENT io WHERE INS.BRANCHCODE=RBM.BRANCH_CODE and ins.id=ppc.id and xg.productname=ins.productname and io.id=INS.OADETAILS_ID AND NVL(ppc.Typeofvehicle,'X') NOT in ('Agricultural Tractors','Non Agricultural Tractors') AND INS.ID=?1", nativeQuery = true)
//	Object VOCPolicy(Long s);
	
	

//	@Query(value ="select '' ID,rm.CBCNUMBER CBC,rm.CREDITCARDREFERENCENUMBER TRANSCATION_NO,''BANKCITY,'S81' DEPOSITINGBANKCODE,dc.IFSCCODE IFSCCODE,(select max(XGENCODE) from commonitem where MASTERNAME='BankMaster' and name = nvl(ch.bank,nvl(cd.bank,nvl(dd.bank,nvl(dc.DEPOSITBANK,nvl(db.BANKCODE,nvl(rm.creditcardbank,nvl(rm.CHEQUE_BANK,nvl(rm.intermediarybank,rm.bankcode))))))))) INSTRUMENTBANK,'' INSTRUMENTBRANCH,'' INSTRUMENTDATE,nvl(rm.CRECARDEXPIRYDATE,cd.CARDEXPIRYDATE) INSTRUMENTEXPDT,nvl(ch.CHEQUENUMBER,nvl(dd.DDNUMBER,nvl(cd.CARDNUMBER,nvl(rm.CHEQUE_NUMBER,rm.CREDITCARDNO)))) INSTRUMENTNUMBER,'VISA' INSTRUMENTTYPE,'' ISCUSTOMERPAYMENT,'' ISLOCALINSTRUMENT,'' MICRCODE,nvl(dc.ACCOUNTHOLDERNAME,rm.ACCOUNT_HOLDER_NAME) PAYEENAME,rm.CHEQUE_AMOUNT PAYMENTAMOUNT,nvl(rm.CHEQUE_DATE,nvl(rm.TRANSACTIONDATE,nvl(rm.CRECARDTRANDATE,nvl(rm.DATEOFREMITTANCE,NVL(to_char(trunc(rm.RECEIVED_DATE),'dd/mm/yyyy'),nvl(ch.CHEQUEDATE,nvl(dd.DDDATE,nvl(cd.TRANSACTIONDATE,nvl(dc.RECEIVEDDATE,nvl(db.DATEOFREMITTANCE,nvl(pg.TRX_DATE,rm.VALUE_DATE))))))))))) PAYMENTDATE, case when UPPer(rm.receiptfor)='CASH' then 'CASH' ELSE CASE WHEN UPPer(rm.receiptfor) IN ('CHEQUE','DD','DRAFT') then 'CHQ' ELSE CASE WHEN UPPer(rm.receiptfor) LIKE '%CARD%' then 'CARD' ELSE 'BD' END END END PAYMENTTYPE,'RSAIC Limited' PAYTO,'' PGSERVICEPROVIDER,rm.BALANCE_AMOUNT RECEIPT_AMOUNT,rm.CDNUMBER RECEIPTNUMBER,ins.id POLID from insurancepolicy ins,payment pay,deposit dp,cheque ch,card cd,demanddraft dd,directcredit dc,directdebit db,PAYMENTGATEWAY pg,CSCPAYMENTGATEWAY cs,AGENTCHEQUE ac,AGENTNEFT an,receiptpayment rp,receiptmaster rm where pay.id=ins.PAYMENTID(+) and pay.id=dp.FK_DEPOSITS(+) and pay.id=ch.FK_CHEQUES(+)and pay.id=cd.FK_CARDS(+) and pay.id=dd.FK_DEMANDDRAFTS(+) and pay.id=dc.FK_DIRECTCREDITID(+) and pay.id=db.FK_DIRECTDEBITID(+)and pay.id=pg.FK_PAYMENTGATEWAYID(+) and pay.id=cs.FK_CSCPGPAYMENTID(+)and pay.id=ac.FK_AGENTCHEQUE(+)and pay.id=an.FK_AGENTNEFT(+) and pay.id=rp.FK_RECEIPTS(+) and (rm.RECEIPT_NUMBER=dp.RECEIPTNUMBER or rm.RECEIPT_NUMBER=ch.RECEIPTNUMBER or rm.RECEIPT_NUMBER=cd.RECEIPTNUMBER or rm.RECEIPT_NUMBER=dp.RECEIPTNUMBER or rm.RECEIPT_NUMBER=dd.RECEIPTNUMBER or rm.RECEIPT_NUMBER=dc.RECEIPTNUMBER or rm.RECEIPT_NUMBER=db.RECEIPTNUMBER or rm.RECEIPT_NUMBER=pg.RECEIPTNUMBER or rm.RECEIPT_NUMBER=cs.RECEIPTNUMBER or rm.RECEIPT_NUMBER=ac.RECEIPT_NUMBER or rm.RECEIPT_NUMBER=an.RECEIPT_NUMBER or rm.RECEIPT_NUMBER=rp.RECEIPTID) and ins.id=?1", nativeQuery = true)
//	List<Object> Payment(Long  i);

//	@Query(value="select 'VPCDEP='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'DepreciationWaiver') VPCDEP,'VPCPRM='||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'VPC_ODBasicCover') VPCPRM,'VPCTPL='||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'VPC_TPBasicCover') VPCTPL,'VPCUND='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'VPC_PAUnnamed') VPCUND,'VPCTDD='||PREMIUM_LIMIT.comp_pricing(ins.id,'AntiTheftDiscount') VPCTDD,'VPCEXG='||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'GeoExtension') VPCEXG,'VPCNEA='||0 VPCNEA,'VPCLLE='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'VPC_LLEmployees') VPCLLE,'VPCEAS='||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'VPC_ElectAccessories') VPCEAS,'VPCFOR='||PREMIUM_LIMIT.COMP_PRICING(INS.ID,'ImportedVehicleLoading') VPCFOR,'VPCPND='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'VPC_PAPaidDriver') VPCPND,'VPCWSG='||PREMIUM_LIMIT.COMP_PRICING(INS.ID,'WindShieldGlassPremium') VPCWSG,'ROUND2='||0 ROUND2,'VPCNMD='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'VPC_PANamedOCcupants') VPCNMD,'VPCAAD='||PREMIUM_LIMIT.COMP_PRICING(INS.ID,'AutoAssociationMembership') VPCAAD,'VPCTOW='||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'AdditionalTowingChargesCover') VPCTOW,'VPCKE2='||0 VPCKE2,'VPCATD='||PREMIUM_LIMIT.COMP_PRICING(INS.ID,'TPPDStatutoryDiscount') VPCATD,'VPCFBG='||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'VPC_FiberGlass') VPCFBG,'VPCCM1='||Pc.Finaldiscount VPCCM1,'ROUND1='||0 ROUND1,'VPCNCD='||PREMIUM_LIMIT.COMP_PRICING(INS.ID,'NoCliamDiscount') VPCNCD,'VPCVES='||PREMIUM_LIMIT.COMP_PRICING(INS.ID,'VoluntaryDed') VPCVES,'VPCNCB='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'NCBProtectorCover') VPCNCB,'VPCPHD='||PREMIUM_LIMIT.COMP_PRICING(INS.ID,'DiscountforHandicapped') VPCPHD,'VPCKE1='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'KeyReplacementCover') VPCKE1,'VPCPOD='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'VPC_CompulsoryPA') VPCPOD,'VPCEXL='||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'TP_GeoExtension') VPCEXL,'VPCENG='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'AggravationCover') VPCENG,'VPCLRT='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'RegistrationchargesRoadtax') VPCLRT,'VPCTRL='||0 VPCTRL,'VPCINV='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'InvoicePrice') VPCINV,'VPCCM2='||0 VPCCM2,'VPCLSC='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'SpareCar') VPCLSC,'VPCBAG='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'LossofBaggage') VPCBAG,'VPCLLD='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'VPC_WLLDriver') VPCLLD,'VPCCNG='||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'VPC_CNGLPGforOD') VPCCNG,'VPCCVD='||0 VPCCVD,'VPCDTE='||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'DriverTutionExtension') VPCDTE,'VPCGAS='||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'VPC_CNG_LPG') VPCGAS,'DEDUCTIBLESVPCDEP-'||0 DEDUCTIBLESVPCDEP,'DEDUCTIBLESVPCPRM-'||0 DEDUCTIBLESVPCPRM,'DEDUCTIBLESVPCTPL-'||0 DEDUCTIBLESVPCTPL,'DEDUCTIBLESVPCUND-'||0 DEDUCTIBLESVPCUND,'DEDUCTIBLESVPCTDD-'||0 DEDUCTIBLESVPCTDD,'DEDUCTIBLESVPCEXG-'||0 DEDUCTIBLESVPCEXG,'DEDUCTIBLESVPCNEA-'||0 DEDUCTIBLESVPCNEA,'DEDUCTIBLESVPCLLE-'||0 DEDUCTIBLESVPCLLE,'DEDUCTIBLESVPCEAS-'||0 DEDUCTIBLESVPCEAS,'DEDUCTIBLESVPCFOR-'||0 DEDUCTIBLESVPCFOR,'DEDUCTIBLESVPCPND-'||0 DEDUCTIBLESVPCPND,'DEDUCTIBLESVPCWSG-'||0 DEDUCTIBLESVPCWSG,'DEDUCTIBLESROUND2-'||0 DEDUCTIBLESROUND2,'DEDUCTIBLESVPCNMD-'||0 DEDUCTIBLESVPCNMD,'DEDUCTIBLESVPCAAD-'||0 DEDUCTIBLESVPCAAD,'DEDUCTIBLESVPCTOW-'||0 DEDUCTIBLESVPCTOW,'DEDUCTIBLESVPCKE2-'||0 DEDUCTIBLESVPCKE2,'DEDUCTIBLESVPCATD-'||0 DEDUCTIBLESVPCATD,'DEDUCTIBLESVPCFBG-'||0 DEDUCTIBLESVPCFBG,'DEDUCTIBLESVPCCM1-'||0 DEDUCTIBLESVPCCM1,'DEDUCTIBLESROUND1-'||0 DEDUCTIBLESROUND1,'DEDUCTIBLESVPCNCD-'||0 DEDUCTIBLESVPCNCD,'DEDUCTIBLESVPCVES-'||0 DEDUCTIBLESVPCVES,'DEDUCTIBLESVPCNCB-'||0 DEDUCTIBLESVPCNCB,'DEDUCTIBLESVPCPHD-'||0 DEDUCTIBLESVPCPHD,'DEDUCTIBLESVPCKE1-'||0 DEDUCTIBLESVPCKE1,'DEDUCTIBLESVPCPOD-'||0 DEDUCTIBLESVPCPOD,'DEDUCTIBLESVPCEXL-'||0 DEDUCTIBLESVPCEXL,'DEDUCTIBLESVPCENG-'||0 DEDUCTIBLESVPCENG,'DEDUCTIBLESVPCLRT-'||0 DEDUCTIBLESVPCLRT,'DEDUCTIBLESVPCTRL-'||0 DEDUCTIBLESVPCTRL,'DEDUCTIBLESVPCINV-'||0 DEDUCTIBLESVPCINV,'DEDUCTIBLESVPCCM2-'||0 DEDUCTIBLESVPCCM2,'DEDUCTIBLESVPCLSC-'||0 DEDUCTIBLESVPCLSC,'DEDUCTIBLESVPCBAG-'||0 DEDUCTIBLESVPCBAG,'DEDUCTIBLESVPCLLD-'||0 DEDUCTIBLESVPCLLD,'DEDUCTIBLESVPCCNG-'||0 DEDUCTIBLESVPCCNG,'DEDUCTIBLESVPCCVD-'||0 DEDUCTIBLESVPCCVD,'DEDUCTIBLESVPCDTE-'||0 DEDUCTIBLESVPCDTE,'DEDUCTIBLESVPCGAS-'||0 DEDUCTIBLESVPCGAS,'SIVPCDEP-'||PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'DepreciationLimit') SIVPCDEP,'SIVPCPRM-'||(PREMIUM_LIMIT.COMP_LIMIT(INS.ID,'ODLimit')+premium_limit.COMP_LIMIT(ins.id,'NonElectricalLimit')) SIVPCPRM,'SIVPCTPL-'||0 SIVPCTPL,'SIVPCUND-'||PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'PAtoUnnamedOccupantsLt') SIVPCUND,'SIVPCTDD-'||0 SIVPCTDD,'SIVPCEXG-'||0 SIVPCEXG,'SIVPCNEA-'||0 SIVPCNEA,'SIVPCLLE-'||0 SIVPCLLE,'SIVPCEAS-'||PREMIUM_LIMIT.COMP_LIMIT(INS.ID,'ElectricalAccessoriesLimit') SIVPCEAS,'SIVPCFOR-'||0 SIVPCFOR,'SIVPCPND-'||PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'PAtoPaidDriverLimit') SIVPCPND,'SIVPCWSG-'||PREMIUM_LIMIT.COMP_LIMIT(INS.ID,'ODLimit') SIVPCWSG,'SIROUND2-'||0 SIROUND2,'SIVPCNMD-'||PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'PANamedOccupantsLimit') SIVPCNMD,'SIVPCAAD-'||0 SIVPCAAD,'SIVPCTOW-'||PREMIUM_LIMIT.COMP_LIMIT(INS.ID,'AdditionalTowingChargesLimit') SIVPCTOW,'SIVPCKE2-'||0 SIVPCKE2,'SIVPCATD-'||PREMIUM_LIMIT.COMP_LIMIT(INS.ID,'LiabilityLimit') SIVPCATD,'SIVPCFBG-'||0 SIVPCFBG,'SIVPCCM1-'||0 SIVPCCM1,'SIROUND1-'||0 SIROUND1,'SIVPCNCD-'||0 SIVPCNCD,'SIVPCVES-'||0 SIVPCVES,'SIVPCNCB-'||PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'NCBProtectorLimit') SIVPCNCB,'SIVPCPHD-'||0 SIVPCPHD,'SIVPCKE1-'||PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'KeyReplacementCoverLimit') SIVPCKE1,'SIVPCPOD-'||0 SIVPCPOD,'SIVPCEXL-'||0 SIVPCEXL,'SIVPCENG-'||PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'AggravationLimit') SIVPCENG,'SIVPCLRT-'||PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'Unexpiredroadtax') SIVPCLRT,'SIVPCTRL-'||0 SIVPCTRL,'SIVPCINV-'||PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'InvoicePriceLimit') SIVPCINV,'SIVPCCM2-'||0 SIVPCCM2,'SIVPCLSC-'||PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'SpareCarLimit') SIVPCLSC,'SIVPCBAG-'||PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'LossofBaggageLimit') SIVPCBAG,'SIVPCLLD-'||0 SIVPCLLD,'SIVPCCNG-'||PREMIUM_LIMIT.COMP_LIMIT(INS.ID,'CNG_LPGLimit') SIVPCCNG,'SIVPCCVD-'||0 SIVPCCVD,'SIVPCDTE-'||0 SIVPCDTE,'SIVPCGAS-'||0 SIVPCGAS from insurancepolicy ins,Privatepassengercar pc where Pc.Id=ins.id and ins.id=?1" , nativeQuery = true)
	@Query(value="select 'VPCDEP='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'DepreciationWaiver') VPCDEP,'VPCPRM='||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'VPC_ODBasicCover') VPCPRM,'VPCTPL='||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'VPC_TPBasicCover') VPCTPL,'VPCUND='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'VPC_PAUnnamed') VPCUND,'VPCTDD='||PREMIUM_LIMIT.comp_pricing(ins.id,'AntiTheftDiscount') VPCTDD,'VPCEXG='||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'GeoExtension') VPCEXG,'VPCNEA='||0 VPCNEA,'VPCLLE='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'VPC_LLEmployees') VPCLLE,'VPCEAS='||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'VPC_ElectAccessories') VPCEAS,'VPCFOR='||PREMIUM_LIMIT.COMP_PRICING(INS.ID,'ImportedVehicleLoading') VPCFOR,'VPCPND='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'VPC_PAPaidDriver') VPCPND,'VPCWSG='||PREMIUM_LIMIT.COMP_PRICING(INS.ID,'WindShieldGlassPremium') VPCWSG,'ROUND2='||0 ROUND2,'VPCNMD='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'VPC_PANamedOCcupants') VPCNMD,'VPCAAD='||PREMIUM_LIMIT.COMP_PRICING(INS.ID,'AutoAssociationMembership') VPCAAD,'VPCTOW='||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'AdditionalTowingChargesCover') VPCTOW,'VPCKE2='||0 VPCKE2,'VPCATD='||PREMIUM_LIMIT.COMP_PRICING(INS.ID,'TPPDStatutoryDiscount') VPCATD,'VPCFBG='||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'VPC_FiberGlass') VPCFBG,'VPCCM1='||Pc.Finaldiscount VPCCM1,'ROUND1='||0 ROUND1,'VPCNCD='||PREMIUM_LIMIT.COMP_PRICING(INS.ID,'NoCliamDiscount') VPCNCD,'VPCVES='||PREMIUM_LIMIT.COMP_PRICING(INS.ID,'VoluntaryDed') VPCVES,'VPCNCB='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'NCBProtectorCover') VPCNCB,'VPCPHD='||PREMIUM_LIMIT.COMP_PRICING(INS.ID,'DiscountforHandicapped') VPCPHD,'VPCKE1='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'KeyReplacementCover') VPCKE1,'VPCPOD='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'VPC_CompulsoryPA') VPCPOD,'VPCEXL='||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'TP_GeoExtension') VPCEXL,'VPCENG='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'AggravationCover') VPCENG,'VPCLRT='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'RegistrationchargesRoadtax') VPCLRT,'VPCTRL='||0 VPCTRL,'VPCINV='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'InvoicePrice') VPCINV,'VPCCM2='||0 VPCCM2,'VPCLSC='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'SpareCar') VPCLSC,'VPCBAG='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'LossofBaggage') VPCBAG,'VPCLLD='||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'VPC_WLLDriver') VPCLLD,'VPCCNG='||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'VPC_CNGLPGforOD') VPCCNG,'VPCCVD='||0 VPCCVD,'VPCDTE='||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'DriverTutionExtension') VPCDTE,'VPCGAS='||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'VPC_CNG_LPG') VPCGAS,'DEDUCTIBLESVPCDEP-'||0 DEDUCTIBLESVPCDEP,'DEDUCTIBLESVPCPRM-'||0 DEDUCTIBLESVPCPRM,'DEDUCTIBLESVPCTPL-'||0 DEDUCTIBLESVPCTPL,'DEDUCTIBLESVPCUND-'||0 DEDUCTIBLESVPCUND,'DEDUCTIBLESVPCTDD-'||0 DEDUCTIBLESVPCTDD,'DEDUCTIBLESVPCEXG-'||0 DEDUCTIBLESVPCEXG,'DEDUCTIBLESVPCNEA-'||0 DEDUCTIBLESVPCNEA,'DEDUCTIBLESVPCLLE-'||0 DEDUCTIBLESVPCLLE,'DEDUCTIBLESVPCEAS-'||0 DEDUCTIBLESVPCEAS,'DEDUCTIBLESVPCFOR-'||0 DEDUCTIBLESVPCFOR,'DEDUCTIBLESVPCPND-'||0 DEDUCTIBLESVPCPND,'DEDUCTIBLESVPCWSG-'||0 DEDUCTIBLESVPCWSG,'DEDUCTIBLESROUND2-'||0 DEDUCTIBLESROUND2,'DEDUCTIBLESVPCNMD-'||0 DEDUCTIBLESVPCNMD,'DEDUCTIBLESVPCAAD-'||0 DEDUCTIBLESVPCAAD,'DEDUCTIBLESVPCTOW-'||0 DEDUCTIBLESVPCTOW,'DEDUCTIBLESVPCKE2-'||0 DEDUCTIBLESVPCKE2,'DEDUCTIBLESVPCATD-'||0 DEDUCTIBLESVPCATD,'DEDUCTIBLESVPCFBG-'||0 DEDUCTIBLESVPCFBG,'DEDUCTIBLESVPCCM1-'||0 DEDUCTIBLESVPCCM1,'DEDUCTIBLESROUND1-'||0 DEDUCTIBLESROUND1,'DEDUCTIBLESVPCNCD-'||0 DEDUCTIBLESVPCNCD,'DEDUCTIBLESVPCVES-'||0 DEDUCTIBLESVPCVES,'DEDUCTIBLESVPCNCB-'||0 DEDUCTIBLESVPCNCB,'DEDUCTIBLESVPCPHD-'||0 DEDUCTIBLESVPCPHD,'DEDUCTIBLESVPCKE1-'||0 DEDUCTIBLESVPCKE1,'DEDUCTIBLESVPCPOD-'||0 DEDUCTIBLESVPCPOD,'DEDUCTIBLESVPCEXL-'||0 DEDUCTIBLESVPCEXL,'DEDUCTIBLESVPCENG-'||0 DEDUCTIBLESVPCENG,'DEDUCTIBLESVPCLRT-'||0 DEDUCTIBLESVPCLRT,'DEDUCTIBLESVPCTRL-'||0 DEDUCTIBLESVPCTRL,'DEDUCTIBLESVPCINV-'||0 DEDUCTIBLESVPCINV,'DEDUCTIBLESVPCCM2-'||0 DEDUCTIBLESVPCCM2,'DEDUCTIBLESVPCLSC-'||0 DEDUCTIBLESVPCLSC,'DEDUCTIBLESVPCBAG-'||0 DEDUCTIBLESVPCBAG,'DEDUCTIBLESVPCLLD-'||0 DEDUCTIBLESVPCLLD,'DEDUCTIBLESVPCCNG-'||0 DEDUCTIBLESVPCCNG,'DEDUCTIBLESVPCCVD-'||0 DEDUCTIBLESVPCCVD,'DEDUCTIBLESVPCDTE-'||0 DEDUCTIBLESVPCDTE,'DEDUCTIBLESVPCGAS-'||0 DEDUCTIBLESVPCGAS,'SIVPCDEP-'||PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'DepreciationLimit') SIVPCDEP,'SIVPCPRM-'||(PREMIUM_LIMIT.COMP_LIMIT(INS.ID,'ODLimit')+premium_limit.COMP_LIMIT(ins.id,'NonElectricalLimit')) SIVPCPRM,'SIVPCTPL-'||0 SIVPCTPL,'SIVPCUND-'||PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'PAtoUnnamedOccupantsLt') SIVPCUND,'SIVPCTDD-'||0 SIVPCTDD,'SIVPCEXG-'||0 SIVPCEXG,'SIVPCNEA-'||0 SIVPCNEA,'SIVPCLLE-'||0 SIVPCLLE,'SIVPCEAS-'||PREMIUM_LIMIT.COMP_LIMIT(INS.ID,'ElectricalAccessoriesLimit') SIVPCEAS,'SIVPCFOR-'||0 SIVPCFOR,'SIVPCPND-'||PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'PAtoPaidDriverLimit') SIVPCPND,'SIVPCWSG-'|| CASE WHEN PREMIUM_LIMIT.COMP_LIMIT(INS.ID,'WindShieldGlassLimit')=0 THEN  PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'WindShieldGlassLimit') ELSE 0 END SIVPCWSG,'SIROUND2-'||0 SIROUND2,'SIVPCNMD-'||PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'PANamedOccupantsLimit') SIVPCNMD,'SIVPCAAD-'||0 SIVPCAAD,'SIVPCTOW-'||PREMIUM_LIMIT.COMP_LIMIT(INS.ID,'AdditionalTowingChargesLimit') SIVPCTOW,'SIVPCKE2-'||0 SIVPCKE2,'SIVPCATD-'||PREMIUM_LIMIT.COMP_LIMIT(INS.ID,'LiabilityLimit') SIVPCATD,'SIVPCFBG-'||0 SIVPCFBG,'SIVPCCM1-'||0 SIVPCCM1,'SIROUND1-'||0 SIROUND1,'SIVPCNCD-'||0 SIVPCNCD,'SIVPCVES-'||0 SIVPCVES,'SIVPCNCB-'||PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'NCBProtectorLimit') SIVPCNCB,'SIVPCPHD-'||0 SIVPCPHD,'SIVPCKE1-'||PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'KeyReplacementCoverLimit') SIVPCKE1,'SIVPCPOD-'||0 SIVPCPOD,'SIVPCEXL-'||0 SIVPCEXL,'SIVPCENG-'||PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'AggravationLimit') SIVPCENG,'SIVPCLRT-'||PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'Unexpiredroadtax') SIVPCLRT,'SIVPCTRL-'||0 SIVPCTRL,'SIVPCINV-'||PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'InvoicePriceLimit') SIVPCINV,'SIVPCCM2-'||0 SIVPCCM2,'SIVPCLSC-'||PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'SpareCarLimit') SIVPCLSC,'SIVPCBAG-'||PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'LossofBaggageLimit') SIVPCBAG,'SIVPCLLD-'||0 SIVPCLLD,'SIVPCCNG-'||PREMIUM_LIMIT.COMP_LIMIT(INS.ID,'CNG_LPGLimit') SIVPCCNG,'SIVPCCVD-'||0 SIVPCCVD,'SIVPCDTE-'||0 SIVPCDTE,'SIVPCGAS-'||0 SIVPCGAS from insurancepolicy ins,Privatepassengercar pc where Pc.Id=ins.id and ins.id=?1", nativeQuery = true)
	Object CoverageVPC(Long k);
	
	@Query(value = "SELECT PPC.DAYPARKING,ppc.VEHICLEMOSTLYDRIVENON MOSTLYDRIVENON,PPC.ENGINECAPACITY IUWP2_MR_CAP_CC,PPC.CHASSISNO IUWP2_MR_CHAS_NUM,CASE WHEN PPC.VEHICLECOLOR='Metallic' THEN '0001' ELSE CASE WHEN PPC.VEHICLECOLOR='Non-Metallic' THEN '0002' ELSE CASE WHEN PPC.VEHICLECOLOR='White' THEN '0003' ELSE CASE WHEN PPC.VEHICLECOLOR='Black' THEN '0004' ELSE CASE WHEN PPC.VEHICLECOLOR='Blue' THEN '0005' ELSE CASE WHEN PPC.VEHICLECOLOR='Metallic Grey' THEN '0006' ELSE CASE WHEN PPC.VEHICLECOLOR='Emerald Green' THEN '0007' ELSE CASE WHEN PPC.VEHICLECOLOR='Green' THEN '0008' ELSE CASE WHEN PPC.VEHICLECOLOR='Maroon' THEN '0009' ELSE CASE WHEN PPC.VEHICLECOLOR='Gold' THEN '0010' ELSE CASE WHEN PPC.VEHICLECOLOR='Red' THEN '0011' ELSE CASE WHEN PPC.VEHICLECOLOR='Tangarine Mist' THEN '0012' ELSE CASE WHEN PPC.VEHICLECOLOR='Silver' THEN '0013' ELSE CASE WHEN PPC.VEHICLECOLOR='Yellow' THEN '0014' ELSE CASE WHEN PPC.VEHICLECOLOR='Purple' THEN '0015' ELSE CASE WHEN PPC.VEHICLECOLOR='Biege' THEN '0016' ELSE CASE WHEN PPC.VEHICLECOLOR='Grey' THEN '0017' ELSE '0001' END END END END END END END END END END END END END END END END END IUWP2_MR_COLOR,PPC.ENGINENO IUWP2_MR_ENG_NUM,0 IUWP2_MR_GVW_TON,PPC.IMTNUMBER||','||Ppc.Sys_Gen_Imt_Numbers||','||Ppc.Sys_Gen_Rsmoac_Numbers IUWP2_MR_LOG_BOOK,0 IUWP2_MR_MIL_USE,PPC.MODELCODE IUWP2_MR_MODEL,PPC.REGISTRATIONNUMBER IUWP2_MR_REGN_NUM,PPC.SEATINGCAPACITY IUWP2_MR_SEAT_CAP,PPC.REGISTRATIONZONE IUWP2_MR_TERR,CASE WHEN UPPER(PPC.VEHICLEUSAGE)='PRIVATE AND COMMERCIAL' THEN 21 ELSE 11 END IUWP2_MR_USG_CD,PPC.YEAROFMANUFACTURE IUWP2_MR_YR_MFR,PPC.DATEOFREGISTRATION IUWP2_MR_1ST_REG_DT,PPC.PURCHASEWITH HypothecatedTo,PPC.REGISTERINGAUTHORITY RTO,PPC.REGISTERINGLOCATION registration_city,rp.LEGACY_CODE MAKECODE,CASE WHEN PPC.CLAIMSFREEYEARS=0 THEN 0 ELSE CASE WHEN PPC.CLAIMSFREEYEARS=1 THEN 20 ELSE CASE WHEN PPC.CLAIMSFREEYEARS=2 THEN 25 ELSE CASE WHEN PPC.CLAIMSFREEYEARS=3 THEN 35 ELSE CASE WHEN PPC.CLAIMSFREEYEARS=4 THEN 45 ELSE CASE WHEN PPC.CLAIMSFREEYEARS=5 THEN 50 ELSE CASE WHEN PPC.CLAIMSFREEYEARS>5 THEN 65 END END END END END END END NCB_PERCENTAGE,PPC.STATEDVALUEOFVEHICLE IDV,(SELECT DISTINCT CI.xgencode FROM COMMONITEM CI WHERE name =PPC.REGISTRATIONSTATE AND CI.MASTERNAME ='State') state_code,PPC.FUELTYPE fuletype FROM INSURANCEPOLICY INS,PRIVATEPASSENGERCAR PPC,roleplayer rp WHERE INS.ID=PPC.ID AND RP.PARTY_ID=PPC.MAKECODE AND ROWNUM<2 and INS.ID=?1", nativeQuery = true)
	Object Car(Long L);
	
	@Query(value = "SELECT PPC.DAYTIMEPARKING,ppc.VEHICLEMOSTLYDRIVENON MOSTLYDRIVENON,PPC.ENGINECAPACITY IUWP2_MR_CAP_CC,PPC.CHASSISNO IUWP2_MR_CHAS_NUM,CASE WHEN PPC.COLOUR='Metallic' THEN '0001' ELSE CASE WHEN PPC.COLOUR='Non-Metallic' THEN '0002' ELSE CASE WHEN PPC.COLOUR='White' THEN '0003' ELSE CASE WHEN PPC.COLOUR='Black' THEN '0004' ELSE CASE WHEN PPC.COLOUR='Blue' THEN '0005' ELSE CASE WHEN PPC.COLOUR='Metallic Grey' THEN '0006' ELSE CASE WHEN PPC.COLOUR='Emerald Green' THEN '0007' ELSE CASE WHEN PPC.COLOUR='Green' THEN '0008' ELSE CASE WHEN PPC.COLOUR='Maroon' THEN '0009' ELSE CASE WHEN PPC.COLOUR='Gold' THEN '0010' ELSE CASE WHEN PPC.COLOUR='Red' THEN '0011' ELSE CASE WHEN PPC.COLOUR='Tangarine Mist' THEN '0012' ELSE CASE WHEN PPC.COLOUR='Silver' THEN '0013' ELSE CASE WHEN PPC.COLOUR='Yellow' THEN '0014' ELSE CASE WHEN PPC.COLOUR='Purple' THEN '0015' ELSE CASE WHEN PPC.COLOUR='Biege' THEN '0016' ELSE CASE WHEN PPC.COLOUR='Grey' THEN '0017' ELSE '0001' END END END END END END END END END END END END END END END END END IUWP2_MR_COLOR,PPC.ENGINENO IUWP2_MR_ENG_NUM,0 IUWP2_MR_GVW_TON,PPC.IMTNUMBER||','||Ppc.Sys_Gen_Imt_Numbers||','||Ppc.Sys_Gen_Rsmoac_Numbers IUWP2_MR_LOG_BOOK,0 IUWP2_MR_MIL_USE,PPC.MODELCODE IUWP2_MR_MODEL,PPC.REGISTRATIONNO IUWP2_MR_REGN_NUM,PPC.SEATINGCAPACITY IUWP2_MR_SEAT_CAP,PPC.REGISTRATIONZONE IUWP2_MR_TERR,CASE WHEN UPPER(PPC.VEHICLEUSAGE)='PRIVATE AND COMMERCIAL' THEN 21 ELSE 11 END IUWP2_MR_USG_CD,PPC.YEAROFMANUFACTURE IUWP2_MR_YR_MFR,PPC.DATEOFREGISTRATION IUWP2_MR_1ST_REG_DT,PPC.LEASEORHIREPURCHASEWITH HypothecatedTo,PPC.REGISTERINGAUTHORITY RTO,PPC.REGISTERINGLOCATIONORCITY registration_city,rp.LEGACY_CODE MAKECODE,CASE WHEN PPC.CLAIMSFREEYRS=0 THEN 0 ELSE CASE WHEN PPC.CLAIMSFREEYRS=1 THEN 20 ELSE CASE WHEN PPC.CLAIMSFREEYRS=2 THEN 25 ELSE CASE WHEN PPC.CLAIMSFREEYRS=3 THEN 35 ELSE CASE WHEN PPC.CLAIMSFREEYRS=4 THEN 45 ELSE CASE WHEN PPC.CLAIMSFREEYRS=5 THEN 50 ELSE CASE WHEN PPC.CLAIMSFREEYRS>5 THEN 65 END END END END END END END NCB_PERCENTAGE,PPC.IDV IDV,(SELECT DISTINCT CI.xgencode FROM COMMONITEM CI WHERE name =PPC.REGSTATE AND CI.MASTERNAME ='State') state_code,PPC.FUELTYPE fuletype FROM INSURANCEPOLICY INS,motorcycle PPC,roleplayer rp WHERE INS.ID=PPC.ID AND RP.PARTY_ID=PPC.MAKECODE AND ROWNUM<2 and INS.ID=?1", nativeQuery = true)
	Object Motorcycle(Long K);
	
//	@Query(value="SELECT 'ZEDCS-'||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'EducationCess') ZEDCS, 'ZKCESS-'||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'KrishiKalyan') ZKCESS,'ZOVCM-'||0 ZOVCM,'ZCLD-'||0 ZCLD,'ZWROFF='||NVL(PREMIUM_LIMIT.PREMIUM(INS.ID)-PAY.TOTALAMOUNT,0) ZWROFF,'ZSTAX-'||0 ZSTAX,'ZOCMTX-'||0 ZOCMTX,'ZDILCM-'||0 ZDILCM,'ZSDEXP-'||0 ZSDEXP,'ZSTDTY-'||0 ZSTDTY,'ZSGST-'||0  ZSGST,'ZCGST-'||0  ZCGST,'ZIGST-'||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'ServiceeTax') ZIGST,'ZUTGST-'||0  ZUGST FROM INSURANCEPOLICY INS,PAYMENT PAY WHERE INS.PAYMENTID=PAY.ID(+) AND INS.ID=?1", nativeQuery = true)
//	@Query(value="select 'ZIGST-'|| NVL((SELECT SUM(thevalue) FROM property pro WHERE  cc.id=pro.COVERAGEID  AND pro.description IN ('IGST')),0) as ZIGST, 'ZCGST-'|| NVL((SELECT SUM(thevalue) FROM property pro WHERE  cc.id=pro.COVERAGEID  AND pro.description IN ('CGST')  ),0) as ZCGST, 'ZSGST-'|| NVL((SELECT SUM(thevalue) FROM property pro WHERE  cc.id=pro.COVERAGEID  AND pro.description IN ('SGST') ),0) as ZSGST, 'ZUTGST-'|| NVL((SELECT SUM(thevalue) FROM property pro WHERE  cc.id=pro.COVERAGEID  AND pro.description IN ('UTGST')),0) as ZUTGST FROM insurancepolicy ins, contractcomponent c,coveragecomponent cc WHERE ins.id= c.CONTRACTID and c.COVERAGEDETAILSID=cc.id and (cc.productname in ('ServiceeTax','Service Tax') or cc.productdisplayname in ('ServiceeTax','Service Tax')) and c.COMPOSITECOVERAGE='0' and ins.islatest='1' and ins.ID=?1", nativeQuery = true)
	@Query(value="select 'ZIGST-'|| NVL((SELECT SUM(thevalue) FROM property pro WHERE  cc.id=pro.COVERAGEID  AND pro.description IN ('IGST')),0) as ZIGST, 'ZCGST-'|| NVL((SELECT SUM(thevalue) FROM property pro WHERE  cc.id=pro.COVERAGEID  AND pro.description IN ('CGST')  ),0) as ZCGST, 'ZSGST-'|| NVL((SELECT SUM(thevalue) FROM property pro WHERE  cc.id=pro.COVERAGEID  AND pro.description IN ('SGST') ),0) as ZSGST, 'ZUTGST-'|| NVL((SELECT SUM(thevalue) FROM property pro WHERE  cc.id=pro.COVERAGEID  AND pro.description IN ('UTGST')),0) as ZUTGST,'ZOVCM_RATE-'||NVL(ins.AGENTCOMMRATE,0) as ZOVCM_RATE,'ZOVCM-'||NVL(ins.AGENTCOMMAMOUNT,0) as ZOVCM FROM insurancepolicy ins, contractcomponent c,coveragecomponent cc WHERE ins.id= c.CONTRACTID and  c.COVERAGEDETAILSID=cc.id and (cc.productname in ('ServiceeTax','Service Tax') or cc.productdisplayname in ('ServiceeTax','Service Tax')) and c.COMPOSITECOVERAGE='0' and ins.islatest='1' and ins.ID=?1", nativeQuery = true)
	Object PolicyCoverage(Long Pc);
	
//	@Query(value="select  Id from Insurancepolicy where islatest=1 and businessstatus='final' and hasuploaded=0 and createdby!='DM' and Insurableitem='privatePassengerCar'" , nativeQuery = true)
//	List<Long> Ids();
	
	@Query(value="select policycode from Insurancepolicy where id=?1" , nativeQuery = true)
	String PolicyCode(Long Ids);
	
	@Query(value="select id from Insurancepolicy where Paymentid=?1" , nativeQuery = true)
	Long id(Long Ids);
	
	@Query(value="select productname from Insurancepolicy where id=?1" , nativeQuery = true)
	String Productcode(Long Ids);
	
	@Query(value="select EAPPS_RECEIPT_NUMBER_QV(paymentid) from dual" , nativeQuery = true)
	String Receiptnos(Long Insid);
	
	@Query(value="select Gstnumbers from  GSTNUMBERS_STATES where state=?1" , nativeQuery = true)
	String gstnNumber(String State);
	
	
//	@Query(value="select id from Insurancepolicy  where islatest=1 and businessstatus='final' and hasuploaded=0 and (Policy_Status is null or Receipt_Status is null)" ,nativeQuery = true) ,'commercialVehicle'
//	@Query(value="select  Ins.Paymentid from Insurancepolicy ins where islatest=1 and businessstatus='final' and hasuploaded=0 and createdby!='DM' and Insurableitem in ('privatePassengerCar') and trunc(to_date(lastmodifiedtime,'dd/mm/yyyy HH24:mi:ss'))>=(sysdate-30)" ,nativeQuery = true)
	@Query(value="select  Ins.Paymentid from Insurancepolicy ins where"
			+ " ins.islatest=1 and ins.businessstatus='final' and ins.TRANSACTIONTYPE in ('NB','RN') "
			+ "and ins.hasuploaded in (select DISTINCT hasupload from epl_product)"
			+ " and ins.createdby!='DM' and ins.Insurableitem in (select product from EPL_PRODUCT) "
			+ "and trunc(to_date(lastmodifiedtime,'dd/mm/yyyy HH24:mi:ss'))>=(sysdate-30) ORDER by ins.PAYMENTID" ,nativeQuery = true)
	List<BigDecimal> Idsofdate();
	
//select  id from Insurancepolicy ins where islatest=1 and businessstatus='final' and hasuploaded=0 and createdby!='DM' and Insurableitem in ('privatePassengerCar','commercialVehicle') and not exists (select 'x' from INVALID_DATA_EAPPS ide where Ide.Insid=ins.id and (Ide.Policy_Status is not null and Ide.Policy_Status!='RETRY') and (Ide.receipt_Status!='RETRY' and Ide.Receipt_Status is not null) ) and trunc(to_date(lastmodifiedtime,'dd/mm/yyyy HH24:mi:ss'))>=(sysdate-30)
	
	@Query(value="select 'SIVGCCNG-'||PREMIUM_LIMIT.comp_limit(ins.id,'CNG_LPGLimit') SIVGCCNG,'VGCAPG-'||PREMIUM_LIMIT.ELE_PREMIUM(ins.id,'Additional_GVW') VGCAPG,'DEDUCTIBLESVGCTTL2-'||0  DEDUCTIBLESVGCTTL2,'DEDUCTIBLESVGCTPR2-'||0  DEDUCTIBLESVGCTPR2,'DEDUCTIBLESVGCTDD-'||0  DEDUCTIBLESVGCTDD,'DEDUCTIBLESVGCTTL-'||0  DEDUCTIBLESVGCTTL,'DEDUCTIBLESVGCGAS-'||0  DEDUCTIBLESVGCGAS,'DEDUCTIBLESVGCFGP-'||0  DEDUCTIBLESVGCFGP,'DEDUCTIBLESVGCPOD-'||0  DEDUCTIBLESVGCPOD,'DEDUCTIBLESVGCWSG-'||0  DEDUCTIBLESVGCWSG,'DEDUCTIBLESROUND1-'||0  DEDUCTIBLESROUND1,'DEDUCTIBLESVGCXGL-'||0  DEDUCTIBLESVGCXGL,'DEDUCTIBLESVGCATD-'||0  DEDUCTIBLESVGCATD,'DEDUCTIBLESVGCTPR-'||0  DEDUCTIBLESVGCTPR,'DEDUCTIBLESVGCTPL-'||0  DEDUCTIBLESVGCTPL,'DEDUCTIBLESVGCDEP-'||0  DEDUCTIBLESVGCDEP,'DEDUCTIBLESVGCIPD-'||0  DEDUCTIBLESVGCIPD,'DEDUCTIBLESVGCBPR-'||0  DEDUCTIBLESVGCBPR,'DEDUCTIBLESVGCPND-'||0  DEDUCTIBLESVGCPND,'DEDUCTIBLESVGCNEA-'||0  DEDUCTIBLESVGCNEA,'DEDUCTIBLESVGCAPG-'||0  DEDUCTIBLESVGCAPG,'DEDUCTIBLESVGCLLE-'||0  DEDUCTIBLESVGCLLE,'DEDUCTIBLESVGCEAS-'||0  DEDUCTIBLESVGCEAS,'DEDUCTIBLESVGCCM1-'||0  DEDUCTIBLESVGCCM1,'DEDUCTIBLESVGCNCD-'||0  DEDUCTIBLESVGCNCD,'DEDUCTIBLESVGCCNG-'||0  DEDUCTIBLESVGCCNG,'DEDUCTIBLESVGCNFN-'||0  DEDUCTIBLESVGCNFN,'DEDUCTIBLESVGCNFE-'||0  DEDUCTIBLESVGCNFE,'DEDUCTIBLESROUND2-'||0  DEDUCTIBLESROUND2,'DEDUCTIBLESVGCLLW-'||0  DEDUCTIBLESVGCLLW,'DEDUCTIBLESVGCTOW-'||0  DEDUCTIBLESVGCTOW,'DEDUCTIBLESVGCXGE-'||0  DEDUCTIBLESVGCXGE,'DEDUCTIBLESVGCVES-'||0  DEDUCTIBLESVGCVES,'DEDUCTIBLESVGCPTM-'||0  DEDUCTIBLESVGCPTM,'DEDUCTIBLESVGCDTE-'||0  DEDUCTIBLESVGCDTE,'VGCTDD-'||premium_limit.comp_pricing(ins.id,'AntiTheftDiscount') VGCTDD,'VGCTTL-'||NVL(ct1.Trailertppremium,0) TRAILER1_TP_PREMIUM, 'VGCTTL2-'||NVL(ct2.Trailertppremium,0) TRAILER2_TP_PREMIUM,'VGCGAS-'||premium_limit.ele_premium(ins.id,'CNGKit') VGCGAS,'VGCFGP-'||PREMIUM_LIMIT.ELE_PREMIUM(ins.id,'FiberGlass') VGCFGP,'VGCPOD-'||premium_limit.comp_premium(ins.id,'PAOwnerDriver') VGCPOD,'VGCWSG-'||premium_limit.comp_pricing(ins.id,'WindShieldGlassPremium') VGCWSG,'ROUND1-'||0 ROUND1,'VGCXGL-'||PREMIUM_LIMIT.comp_premium(ins.id,'TP_GeoExtension') VGCXGL,'VGCATD-'||premium_limit.comp_pricing(ins.id,'TPPDStatutoryDiscount') VGCATD,'VGCTPR-'||NVL(ct1.Trailerodpremium,0) TRAILER1_OD_PREMIUM,'VGCTPR2-'||NVL(ct2.Trailerodpremium,0) TRAILER2_OD_PREMIUM,'VGCTPL-'||premium_limit.ele_premium(ins.id,'CommercialLiabilityOnly') VGCTPL,'VGCDEP-'||premium_limit.comp_pricing(ins.id,'DepreciationWaiverPremium') VGCDEP,'VGCIPD-'||premium_limit.comp_pricing(ins.id,'OwnPremisesDiscount') VGCIPD,'VGCBPR-'||premium_limit.ELE_PREMIUM(ins.id,'CommericalODOnly') VGCBPR,'VGCPND-'||premium_limit.comp_premium(ins.id,'PAPaidDriver') VGCPND,'VGCNEA-'||0 VGCNEA,'VGCLLE-'||premium_limit.comp_premium(ins.id,'LLDriverConductorCleaner') VGCLLE,'VGCEAS-'||premium_limit.ELE_PREMIUM(ins.id,'ElectircalAccessoriess') VGCEAS,'VGCCM1='||cv.finaldiscount VGCCM1,'VGCNCD-'||premium_limit.comp_pricing(ins.id,'NoCliamDiscount') VGCNCD,'VGCCNG-'||PREMIUM_LIMIT.comp_limit(ins.id,'CNG_LPGLimit') VGCCNG,'VGCNFN-'||premium_limit.comp_premium(ins.id,'NFPPtoNonEmployees') VGCNFN,'VGCNFE-'||premium_limit.comp_premium(ins.id,'NFPPtoEmployees') VGCNFE,'ROUND2-'||0 ROUND2,'VGCLLW-'||premium_limit.comp_premium(ins.id,'WLLDriver') VGCLLW,'VGCTOW-'||PREMIUM_LIMIT.ELE_PREMIUM(ins.id,'AdditionalTowingChargesCover') VGCTOW,'VGCXGE-'||PREMIUM_LIMIT.ele_premium(ins.id,'GeoExtension') VGCXGE,'VGCVES-'||0 VGCVES,'VGCPTM-'||PREMIUM_LIMIT.ele_premium(ins.id,'TyreMudguard') VGCPTM,'VGCDTE-'||PREMIUM_LIMIT.ele_premium(ins.id,'DriverTutionExtension') VGCDTE,'SIVGCTDD-'||0 SIVGCTDD,'SIVGCTTL-'||0 SIVGCTTL,'SIVGCTTL2-'||0 SIVGCTTL2,'SIVGCGAS-'||0 SIVGCGAS,'SIVGCFGP-'||0 SIVGCFGP,'SIVGCPOD-'||0 SIVGCPOD,'SIVGCWSG-'||PREMIUM_LIMIT.comp_limit(ins.id,'ODLimit') SIVGCWSG,'SIROUND1-'||0 SIROUND1,'SIVGCXGL-'||0 SIVGCXGL,'SIVGCATD-'||PREMIUM_LIMIT.comp_limit(ins.id,'LiabilityLimit') SIVGCATD,'SIVGCTPR-'||0 SIVGCTPR,'SIVGCTPR2-'||0 SIVGCTPR2,'SIVGCTPL-'||0 SIVGCTPL,'SIVGCDEP-'||PREMIUM_LIMIT.ele_limit(ins.id,'DepreciationLimit') SIVGCDEP,'SIVGCIPD-'||0 SIVGCIPD,'SIVGCBPR-'||PREMIUM_LIMIT.comp_limit(ins.id,'ODLimit') SIVGCBPR,'SIVGCPND-'||premium_limit.ele_limit(ins.id,'PAtoPaidDriverLimit') SIVGCPND,'SIVGCNEA-'||0 SIVGCNEA,'SIVGCAPG-'||0 SIVGCAPG,'SIVGCLLE-'||0 SIVGCLLE,'SIVGCEAS-'||0 SIVGCEAS,'SIVGCCM1-'||0 SIVGCCM1,'SIVGCNCD-'||0 SIVGCNCD,'SIVGCVCN-'||PREMIUM_LIMIT.comp_limit(ins.id,'CNG_LPGLimit') SIVGCVCN,'SIVGCNFN-'||0 SIVGCNFN,'SIVGCNFE-'||0 SIVGCNFE,'SIROUND2-'||0 SIROUND2,'SIVGCLLW-'||0 SIVGCLLW,'SIVGCTOW-'||PREMIUM_LIMIT.comp_limit(ins.id,'AdditionalTowingChargesLimit') SIVGCTOW,'SIVGCXGE-'||0 SIVGCXGE,'SIVGCVES-'||0 SIVGCVES,'SIVGCPTM-'||0 SIVGCPTM,'SIVGCDTE-'||0 SIVGCDTE from insurancepolicy ins,Commercialvehicle cv,Commercial_Trailers ct1,Commercial_Trailers ct2 where ins.id=cv.id and cv.id=Ct1.Fk_Commercialid(+) and cv.id=Ct2.Fk_Commercialid(+) and Ct1.Trailer_Index(+)=0 and Ct2.Trailer_Index(+)=1 and ins.ID=?1",nativeQuery=true)
	Object VGCCover(Long P);
	
	
	@Query(value="select 'SIVPCVDT-'||0 SIVPCVDT,'DEDUCTIBLESVPCVDT-'||0 DEDUCTIBLESVPCVDT,'VPCVDT-'||premium_limit.ele_premium(ins.id,'DriverTutionExtension') VPCVDT,'VPCVGS-'||PREMIUM_LIMIT.ELE_PREMIUM(ins.id,'CNGKit') VPCVGS,'VPCVFO -'||PREMIUM_LIMIT.comp_pricing(ins.id,'ImportedVehicleLoading') VPCVFO ,'VPCVEA-'||PREMIUM_LIMIT.ELE_PREMIUM(ins.id,'ElectircalAccessoriess') VPCVEA,'VPCVTM-'||PREMIUM_LIMIT.ele_premium(ins.id,'TyreMudguard') VPCVTM,'VPCVNP-'||PREMIUM_LIMIT.comp_premium(ins.id,'NFPPtoNonEmployees') VPCVNP,'VPCVNE-'||0 VPCVNE,'VPCVLP-'||PREMIUM_LIMIT.comp_premium(ins.id,'LegalLiabilitytoPassengers') VPCVLP,'VPCVFG-'||PREMIUM_LIMIT.ELE_PREMIUM(ins.id,'FiberGlass') VPCVFG,'VPCVFD='||PREMIUM_LIMIT.comp_pricing(ins.id,'AntiTheftDiscount') VPCVFD,'VPCVOP-'||PREMIUM_LIMIT.comp_premium(ins.id,'PAOwnerDriver') VPCVOP,'VPCVXG-'||PREMIUM_LIMIT.ele_premium(ins.id,'GeoExtension') VPCVXG,'VPCVPR-'||PREMIUM_LIMIT.ele_premium(ins.id,'CommericalODOnly') VPCVPR,'VPCVNC-'||PREMIUM_LIMIT.comp_pricing(ins.id,'NoCliamDiscount') VPCVNC,'VPCVM1='||cv.finaldiscount VPCVM1,'VPCVXL-'||PREMIUM_LIMIT.comp_premium(ins.id,'TP_GeoExtension') VPCVXL,'VPCVPN-'||PREMIUM_LIMIT.comp_premium(ins.id,'PAPaidDriver') VPCVPN,'VPCVVE-'||0 VPCVVE,'VPCVAT-'||PREMIUM_LIMIT.comp_pricing(ins.id,'TPPDStatutoryDiscount') VPCVAT,'VPCVLL-'||PREMIUM_LIMIT.comp_premium(ins.id,'WLLDriver') VPCVLL,'VPCVNF-'||PREMIUM_LIMIT.comp_premium(ins.id,'NFPPtoEmployees') VPCVNF,'VPCVDE-'||PREMIUM_LIMIT.comp_pricing(ins.id,'DepreciationWaiverPremium') VPCVDE,'VPCVTP-'||PREMIUM_LIMIT.ELE_PREMIUM(ins.id,'CommercialLiabilityOnly') VPCVTP,'VPCVWS-'||PREMIUM_LIMIT.comp_pricing(ins.id,'WindShieldGlassPremium') VPCVWS,'VPCVLW-'||PREMIUM_LIMIT.comp_premium(ins.id,'LLDriverConductorCleaner') VPCVLW,'VPCVLD-'||0 VPCVLD,'VPCVCN-'||PREMIUM_LIMIT.ELE_PREMIUM(ins.id,'CNGLPG') VPCVCN,'VPVTOW-'||PREMIUM_LIMIT.ELE_PREMIUM(ins.id,'AdditionalTowingChargesCover') VPVTOW,'ROUND1-'||0 ROUND1,'ROUND2-'||0 ROUND2,'SIVPCVGS-'||0 SIVPCVGS,'SIVPCVFO -'||0 SIVPCVFO ,'SIVPCVEA-'||PREMIUM_LIMIT.comp_limit(ins.id,'ElectricalAccessoriesLimit') SIVPCVEA,'SIVPCVTM-'||0 SIVPCVTM,'SIVPCVNP-'||0 SIVPCVNP,'SIVPCVNE-'||PREMIUM_LIMIT.comp_limit(ins.id,'NonElectricalLimit') SIVPCVNE,'SIVPCVLP-'||0 SIVPCVLP,'SIVPCVFG-'||0 SIVPCVFG,'SIVPCVFD-'||0 SIVPCVFD,'SIVPCVOP-'||0 SIVPCVOP,'SIVPCVXG-'||0 SIVPCVXG,'SIVPCVPR-'||PREMIUM_LIMIT.comp_limit(ins.id,'ODLimit') SIVPCVPR,'SIVPCVNC-'||0 SIVPCVNC,'SIVPCVM1-'||0 SIVPCVM1,'SIVPCVXL-'||0 SIVPCVXL,'SIVPCVPN-'||PREMIUM_LIMIT.ele_limit(ins.id,'PAtoPaidDriverLimit') SIVPCVPN,'SIVPCVVE-'||0 SIVPCVVE,'SIVPCVAT-'||0 SIVPCVAT,'SIVPCVLL-'||0 SIVPCVLL,'SIVPCVNF-'||0 SIVPCVNF,'SIVPCVDE-'||PREMIUM_LIMIT.ele_limit(ins.id,'DepreciationLimit') SIVPCVDE,'SIVPCVTP-'||PREMIUM_LIMIT.comp_limit(ins.id,'LiabilityLimit') SIVPCVTP,'SIVPCVWS-'||PREMIUM_LIMIT.comp_limit(ins.id,'ODLimit') SIVPCVWS,'SIVPCVLW-'||0 SIVPCVLW,'SIVPCVLD-'||0 SIVPCVLD,'SIVPCVCN-'||PREMIUM_LIMIT.comp_limit(ins.id,'CNG_LPGLimit') SIVPCVCN,'SIVPVTOW-'||PREMIUM_LIMIT.comp_limit(ins.id,'AdditionalTowingChargesLimit') SIVPVTOW,'DEDUCTIBLESVPCVGS-'||0 DEDUCTIBLESVPCVGS,'DEDUCTIBLESVPCVFO -'||0 DEDUCTIBLESVPCVFO ,'DEDUCTIBLESVPCVEA-'||0 DEDUCTIBLESVPCVEA,'DEDUCTIBLESVPCVTM-'||0 DEDUCTIBLESVPCVTM,'DEDUCTIBLESVPCVNP-'||0 DEDUCTIBLESVPCVNP,'DEDUCTIBLESVPCVNE-'||0 DEDUCTIBLESVPCVNE,'DEDUCTIBLESVPCVLP-'||0 DEDUCTIBLESVPCVLP,'DEDUCTIBLESVPCVFG-'||0 DEDUCTIBLESVPCVFG,'DEDUCTIBLESVPCVFD-'||0 DEDUCTIBLESVPCVFD,'DEDUCTIBLESVPCVOP-'||0 DEDUCTIBLESVPCVOP,'DEDUCTIBLESVPCVXG-'||0 DEDUCTIBLESVPCVXG,'DEDUCTIBLESVPCVPR-'||0 DEDUCTIBLESVPCVPR,'DEDUCTIBLESVPCVNC-'||0 DEDUCTIBLESVPCVNC,'DEDUCTIBLESVPCVM1-'||0 DEDUCTIBLESVPCVM1,'DEDUCTIBLESVPCVXL-'||0 DEDUCTIBLESVPCVXL,'DEDUCTIBLESVPCVPN-'||0 DEDUCTIBLESVPCVPN,'DEDUCTIBLESVPCVVE-'||0 DEDUCTIBLESVPCVVE,'DEDUCTIBLESVPCVAT-'||0 DEDUCTIBLESVPCVAT,'DEDUCTIBLESVPCVLL-'||0 DEDUCTIBLESVPCVLL,'DEDUCTIBLESVPCVNF-'||0 DEDUCTIBLESVPCVNF,'DEDUCTIBLESVPCVDE-'||0 DEDUCTIBLESVPCVDE,'DEDUCTIBLESVPCVTP-'||0 DEDUCTIBLESVPCVTP,'DEDUCTIBLESVPCVWS-'||0 DEDUCTIBLESVPCVWS,'DEDUCTIBLESVPCVLW-'||0 DEDUCTIBLESVPCVLW,'DEDUCTIBLESVPCVLD-'||0 DEDUCTIBLESVPCVLD,'DEDUCTIBLESVPCVCN-'||0 DEDUCTIBLESVPCVCN from insurancepolicy ins,Commercialvehicle cv where cv.id=ins.id and ins.id=?1" , nativeQuery = true)
	Object CoverageVPCV(Long k);
	
	
	
	@Query(value = "SELECT PPC.DAYPARKING,PPC.VEHICLEMOSTLYDRIVENON MOSTLYDRIVENON,PPC.ENGINECAPACITY IUWP2_MR_CAP_CC,PPC.CHASSISNO IUWP2_MR_CHAS_NUM,CASE WHEN PPC.VEHICLECOLOR='Metallic' THEN '0001' ELSE CASE WHEN PPC.VEHICLECOLOR='Non-Metallic' THEN '0002' ELSE CASE WHEN PPC.VEHICLECOLOR='White' THEN '0003' ELSE CASE WHEN PPC.VEHICLECOLOR='Black' THEN '0004' ELSE CASE WHEN PPC.VEHICLECOLOR='Blue' THEN '0005' ELSE CASE WHEN PPC.VEHICLECOLOR='Metallic Grey' THEN '0006' ELSE CASE WHEN PPC.VEHICLECOLOR='Emerald Green' THEN '0007'ELSE CASE WHEN PPC.VEHICLECOLOR='Green' THEN '0008' ELSE CASE WHEN PPC.VEHICLECOLOR='Maroon' THEN '0009' ELSE CASE WHEN PPC.VEHICLECOLOR='Gold' THEN '0010' ELSE CASE WHEN PPC.VEHICLECOLOR='Red' THEN '0011' ELSE CASE WHEN PPC.VEHICLECOLOR='Tangarine Mist' THEN '0012' ELSE CASE WHEN PPC.VEHICLECOLOR='Silver' THEN '0013' ELSE CASE WHEN PPC.VEHICLECOLOR='Yellow' THEN '0014' ELSE CASE WHEN PPC.VEHICLECOLOR='Purple' THEN '0015' ELSE CASE WHEN PPC.VEHICLECOLOR='Biege' THEN '0016' ELSE CASE WHEN PPC.VEHICLECOLOR='Grey' THEN '0017' ELSE '' END END END END END END END END END END END END END END END END END IUWP2_MR_COLOR,PPC.ENGINENO IUWP2_MR_ENG_NUM,0 IUWP2_MR_GVW_TON,PPC.IMTNUMBER||','||Ppc.Sys_Gen_Imt_Numbers||','||Ppc.Sys_Gen_Rsmoac_Numbers IUWP2_MR_LOG_BOOK,0 IUWP2_MR_MIL_USE,PPC.MODELCODE IUWP2_MR_MODEL,PPC.REGISTRATIONNUMBER IUWP2_MR_REGN_NUM,PPC.SEATINGCAPACITY IUWP2_MR_SEAT_CAP,PPC.REGISTRATIONZONE IUWP2_MR_TERR,CASE WHEN UPPER(PPC.typeofusage)='PRIVATE' THEN 'PVT' ELSE 'PUB' END IUWP2_MR_USG_CD,PPC.YEAROFMANUFACTURE IUWP2_MR_YR_MFR,PPC.DATEOFREGISTRATION IUWP2_MR_1ST_REG_DT,PPC.PURCHASEWITH HypothecatedTo,PPC.REGISTERINGAUTHORITY RTO,PPC.REGISTERINGLOCATION registration_city,rp.LEGACY_CODE MAKECODE,CASE WHEN PPC.CLAIMSFREEYEARS=0 THEN 0 ELSE CASE WHEN PPC.CLAIMSFREEYEARS=1 THEN 20 ELSE CASE WHEN PPC.CLAIMSFREEYEARS=2 THEN 25 ELSE CASE WHEN PPC.CLAIMSFREEYEARS=3 THEN 35 ELSE CASE WHEN PPC.CLAIMSFREEYEARS=4 THEN 45 ELSE CASE WHEN PPC.CLAIMSFREEYEARS=5 THEN 50 ELSE CASE WHEN PPC.CLAIMSFREEYEARS>5 THEN 65 END END END END END END END NCB_PERCENTAGE,PPC.STATEDVALUEOFVEHICLE IDV,CI.CODE,PPC.FUELTYPE FROM INSURANCEPOLICY INS,Commercialvehicle PPC,roleplayer rp,COMMONITEM CI WHERE INS.ID=PPC.ID AND RP.PARTY_ID=PPC.MAKECODE AND PPC.REGISTRATIONSTATE=CI.NAME(+) AND CI.MASTERNAME='State' AND ROWNUM<2 and INS.ID=?1", nativeQuery = true)
	Object VPCVCar(Long j);
	
	@Query(value="SELECT PPC.DAYPARKING,PPC.VEHICLEMOSTLYDRIVENON MOSTLYDRIVENON,PPC.ENGINECAPACITY IUWP2_MR_CAP_CC,PPC.CHASSISNO IUWP2_MR_CHAS_NUM,CASE WHEN PPC.VEHICLECOLOR='Metallic' THEN '0001'ELSE CASE WHEN PPC.VEHICLECOLOR='Non-Metallic' THEN '0002' ELSE CASE WHEN PPC.VEHICLECOLOR='White' THEN '0003' ELSE CASE WHEN PPC.VEHICLECOLOR='Black' THEN '0004' ELSE CASE WHEN PPC.VEHICLECOLOR='Blue' THEN '0005' ELSE CASE WHEN PPC.VEHICLECOLOR='Metallic Grey' THEN '0006' ELSE CASE WHEN PPC.VEHICLECOLOR='Emerald Green' THEN '0007' ELSE CASE WHEN PPC.VEHICLECOLOR='Green' THEN '0008' ELSE CASE WHEN PPC.VEHICLECOLOR='Maroon' THEN '0009' ELSE CASE WHEN PPC.VEHICLECOLOR='Gold' THEN '0010' ELSE CASE WHEN PPC.VEHICLECOLOR='Red' THEN '0011' ELSE CASE WHEN PPC.VEHICLECOLOR='Tangarine Mist' THEN '0012' ELSE CASE WHEN PPC.VEHICLECOLOR='Silver' THEN '0013' ELSE CASE WHEN PPC.VEHICLECOLOR='Yellow' THEN '0014' ELSE CASE WHEN PPC.VEHICLECOLOR='Purple' THEN '0015' ELSE CASE WHEN PPC.VEHICLECOLOR='Biege' THEN '0016' ELSE CASE WHEN PPC.VEHICLECOLOR='Grey' THEN '0017' ELSE '' END END END END END END END END END END END END END END END END END IUWP2_MR_COLOR,PPC.ENGINENO IUWP2_MR_ENG_NUM,0 IUWP2_MR_GVW_TON,PPC.IMTNUMBER||','||Ppc.Sys_Gen_Imt_Numbers||','||Ppc.Sys_Gen_Rsmoac_Numbers IUWP2_MR_LOG_BOOK,0 IUWP2_MR_MIL_USE,PPC.MODELCODE IUWP2_MR_MODEL,PPC.REGISTRATIONNUMBER IUWP2_MR_REGN_NUM,PPC.SEATINGCAPACITY IUWP2_MR_SEAT_CAP,PPC.REGISTRATIONZONE IUWP2_MR_TERR,CASE WHEN UPPER(PPC.typeofusage)='PRIVATE' THEN 'PVT' ELSE 'PUB' END IUWP2_MR_USG_CD,PPC.YEAROFMANUFACTURE IUWP2_MR_YR_MFR,PPC.DATEOFREGISTRATION IUWP2_MR_1ST_REG_DT,PPC.PURCHASEWITH HypothecatedTo,PPC.REGISTERINGAUTHORITY RTO,PPC.REGISTERINGLOCATION registration_city,rp.LEGACY_CODE MAKECODE,CASE WHEN PPC.CLAIMSFREEYEARS=0 THEN 0 ELSE CASE WHEN PPC.CLAIMSFREEYEARS=1 THEN 20 ELSE CASE WHEN PPC.CLAIMSFREEYEARS=2 THEN 25 ELSE CASE WHEN PPC.CLAIMSFREEYEARS=3 THEN 35 ELSE CASE WHEN PPC.CLAIMSFREEYEARS=4 THEN 45 ELSE CASE WHEN PPC.CLAIMSFREEYEARS=5 THEN 50 ELSE CASE WHEN PPC.CLAIMSFREEYEARS>5 THEN 65 END END END END END END END NCB_PERCENTAGE,PPC.STATEDVALUEOFVEHICLE IDV,CI.CODE,Ct1.Traileridv trailer1_idv,Ct1.Trailermodel_Code trailer1_model_code,(select legacy_code from roleplayer where party_id = (select makeid from vehiclemodel where model_code=Ct1.Trailermodel_Code)) trailer1_make_code,Ct1.Trailer_Year_Of_Manufacture trailer1_yom,Ct1.Trailerchassisnumber trailer1_chassis,Ct2.Traileridv trailer2_idv,Ct2.Trailermodel_Code trailer2_model_code,(select legacy_code from roleplayer where party_id = (select makeid from vehiclemodel where model_code=Ct2.Trailermodel_Code)) trailer2_make_code,Ct2.Trailer_Year_Of_Manufacture trailer2_yom,Ct2.Trailerchassisnumber trailer2_chassis,PPC.FUELTYPE FROM INSURANCEPOLICY INS,Commercialvehicle PPC,roleplayer rp,COMMONITEM CI,Commercial_Trailers ct1,Commercial_Trailers ct2 WHERE INS.ID=PPC.ID and ppc.id=Ct1.Fk_Commercialid(+) and ppc.id=Ct2.Fk_Commercialid(+) and Ct1.Trailer_Index(+)=0 and Ct2.Trailer_Index(+)=1 AND RP.PARTY_ID=PPC.MAKECODE AND PPC.REGISTRATIONSTATE=CI.NAME(+) AND CI.MASTERNAME='State' AND rownum<2 AND INS.id=?1",nativeQuery=true)
	Object OtherCar(Long J);
	
	
	@Query(value="select Trailermake from Commercial_Trailers where FK_COMMERCIALID=?1 and (Trailer_Index=0 or Trailer_Index=1)", nativeQuery = true)
	List<String> trailers(Long J);
	
	@Query(value="select code from Commonitem where Mastername='State' and name=?1 and rownum<2", nativeQuery = true)
	String statecode(String State);
	
	
	@Query(value="select ci.XGENCODE statecode,cm.XGENCODE citycode from commonitem ci,commonitem cm where ci.NAME=?1 and ci.mastername='State' and cm.mastername='City' and cm.NAME=?2 and ROWNUM<2", nativeQuery = true)
    Object state_city_code(String State,String city);
			
			
	@Query(value="select inc.X_GEN_CODE,ppc.Expirydate from Privatepassengercar ppc,INSURANCE_COMPANY_NAME inc where inc.COMPANY_NAME=UPPER(ppc.Previousinsurer) and  ppc.id=?1 and rownum<=1",nativeQuery=true)
	Object oldinsuerprivatecar (Long m);
	
	@Query(value="select inc.X_GEN_CODE,ppc.Expirydate from Commercialvehicle ppc,INSURANCE_COMPANY_NAME inc where inc.COMPANY_NAME=UPPER(ppc.Previousinsurer) and  ppc.id=?1 and rownum<=1",nativeQuery=true)
	Object oldinsurerothercar (Long m);
	
	@Query(value="select inc.X_GEN_CODE,ppc.Expirydate from motorcycle ppc,INSURANCE_COMPANY_NAME inc where inc.COMPANY_NAME=UPPER(ppc.Previousinsurer) and  ppc.id=?1 and rownum<=1",nativeQuery=true)
	Object oldinsurerMotorcycle (Long m);
				
	@Query(value="select hasuploaded from Insurancepolicy where id=?1",nativeQuery=true)
	BigDecimal findhasuploaded(Long id);
	
	@Query(value="SELECT '' ID,Rm.Cbcnumber CBC,'' TRANSCATION_NO,'' BANKCITY,'S81' DEPOSITINGBANKCODE,'' IFSCCODE,'' INSTRUMENTBANK,"
			+  " '' INSTRUMENTBRANCH,'' INSTRUMENTDATE,'' INSTRUMENTEXPDT,'' INSTRUMENTNUMBER,'' INSTRUMENTTYPE,"
			+  " '' ISCUSTOMERPAYMENT,'' ISLOCALINSTRUMENT,'' MICRCODE,'' PAYEENAME,Rm.Cheque_Amount PAYMENTAMOUNT,TO_CHAR(TRUNC(Rm.Created_Date),'DD/MM/YYYY') PAYMENTDATE,"
			+  " 'CASH' PAYMENTTYPE,'RSAIC Limited' PAYTO,'' PGSERVICEPROVIDER,Rm.Balance_Amount RECEIPT_AMOUNT,Rm.Receipt_Number RECEIPTNUMBER,INS.ID POLID"
			+  " FROM Insurancepolicy INS,PAYMENT PAY,DEPOSIT DP,RECEIPTMASTER RM"
			+  " WHERE Ins.Paymentid=PAY.ID"
			+  " AND PAY.ID=Dp.Fk_Deposits"
			+  " AND Dp.Receiptnumber=Rm.Receipt_Number"
			+  " AND INS.ID=?1"
			+  " UNION ALL"
			+  " SELECT '' ID,Rm.Cbcnumber CBC,'' TRANSCATION_NO,'' BANKCITY,'S81' DEPOSITINGBANKCODE,'' IFSCCODE,"
			+  " (SELECT MAX(XGENCODE)"
			+  " FROM commonitem"
			+  " WHERE MASTERNAME='BankMaster'"
			+  " AND name = ch.bank) INSTRUMENTBANK,"
			+  " '' INSTRUMENTBRANCH,'' INSTRUMENTDATE,'' INSTRUMENTEXPDT,ch.CHEQUENUMBER INSTRUMENTNUMBER,'' INSTRUMENTTYPE,"
			+  " '' ISCUSTOMERPAYMENT,'' ISLOCALINSTRUMENT,'' MICRCODE,'' PAYEENAME,Rm.Cheque_Amount PAYMENTAMOUNT,ch.CHEQUEDATE PAYMENTDATE,"
			+  " 'CHQPAY' PAYMENTTYPE,'RSAIC Limited' PAYTO,'' PGSERVICEPROVIDER,Rm.Balance_Amount RECEIPT_AMOUNT,Rm.Receipt_Number RECEIPTNUMBER,INS.ID POLID"
			+  " FROM Insurancepolicy INS,PAYMENT PAY,CHEQUE CH,RECEIPTMASTER RM"
			+  " WHERE Ins.Paymentid=PAY.ID"
			+  " AND PAY.ID=Ch.Fk_Cheques"
			+  " AND CH.Receiptnumber=Rm.Receipt_Number"
			+  " AND INS.ID=?1"
			+  " UNION ALL"
			+  " SELECT '' ID,Rm.Cbcnumber CBC,CD.REFERENCENUMBER TRANSCATION_NO,'' BANKCITY,'S81' DEPOSITINGBANKCODE,'' IFSCCODE,"
			+  " (SELECT MAX(XGENCODE)"
			+  " FROM commonitem"
			+  " WHERE MASTERNAME='BankMaster'"
			+  " AND name   = cD.bank) INSTRUMENTBANK,"
			+  " '' INSTRUMENTBRANCH,'' INSTRUMENTDATE,cd.CARDEXPIRYDATE INSTRUMENTEXPDT,cd.CARDNUMBER INSTRUMENTNUMBER,Cd.Cardtype INSTRUMENTTYPE,"
			+  " '' ISCUSTOMERPAYMENT,'' ISLOCALINSTRUMENT,'' MICRCODE,'' PAYEENAME,Rm.Cheque_Amount PAYMENTAMOUNT,Cd.Transactiondate PAYMENTDATE,"
			+  " 'CARD' PAYMENTTYPE,'RSAIC Limited' PAYTO,'' PGSERVICEPROVIDER,Rm.Balance_Amount RECEIPT_AMOUNT,Rm.Receipt_Number RECEIPTNUMBER,INS.ID POLID"
			+  " FROM Insurancepolicy INS,PAYMENT PAY,CARD CD,RECEIPTMASTER RM"
			+  " WHERE Ins.Paymentid=PAY.ID"
			+  " AND PAY.ID=Cd.Fk_Cards"
			+  " AND CD.Receiptnumber=Rm.Receipt_Number"
			+  " AND INS.ID=?1"
			+  " UNION ALL"
			+  " SELECT '' ID,Rm.Cbcnumber CBC,'' TRANSCATION_NO,'' BANKCITY,'S81' DEPOSITINGBANKCODE,'' IFSCCODE,"
			+  " (SELECT MAX(XGENCODE)"
			+  " FROM commonitem"
			+  " WHERE MASTERNAME='BankMaster'"
			+  " AND name = DD.bank) INSTRUMENTBANK,"
			+  " '' INSTRUMENTBRANCH,'' INSTRUMENTDATE,'' INSTRUMENTEXPDT,dd.DDNUMBER INSTRUMENTNUMBER,'' INSTRUMENTTYPE,"
			+  " '' ISCUSTOMERPAYMENT,'' ISLOCALINSTRUMENT,'' MICRCODE,'' PAYEENAME,Rm.Cheque_Amount PAYMENTAMOUNT,Dd.Dddate PAYMENTDATE,"
			+  " 'CHQPAY' PAYMENTTYPE,'RSAIC Limited' PAYTO,'' PGSERVICEPROVIDER,Rm.Balance_Amount RECEIPT_AMOUNT,Rm.Receipt_Number RECEIPTNUMBER,INS.ID POLID"
			+  " FROM Insurancepolicy INS,PAYMENT PAY,demanddraft DD,RECEIPTMASTER RM"
			+  " WHERE Ins.Paymentid=PAY.ID"
			+  " AND PAY.ID=Dd.Fk_Demanddrafts"
			+  " AND DD.Receiptnumber=Rm.Receipt_Number"
			+  " AND INS.ID=?1"
			+  " UNION ALL"
			+  " SELECT '' ID,Rm.Cbcnumber CBC,Dc.Transactionno TRANSCATION_NO,'' BANKCITY,'S81' DEPOSITINGBANKCODE,Dc.Ifsccode IFSCCODE,"
			+  " (SELECT MAX(XGENCODE)"
			+  " FROM commonitem"
			+  " WHERE MASTERNAME='BankMaster'"
			+  " AND name        = dc.DEPOSITBANK) INSTRUMENTBANK,"
			+  " '' INSTRUMENTBRANCH,'' INSTRUMENTDATE,'' INSTRUMENTEXPDT,'' INSTRUMENTNUMBER,'' INSTRUMENTTYPE,"
			+  " '' ISCUSTOMERPAYMENT,'' ISLOCALINSTRUMENT,Dc.Micrcode MICRCODE,dc.ACCOUNTHOLDERNAME PAYEENAME,Rm.Cheque_Amount PAYMENTAMOUNT,Dc.Receiveddate PAYMENTDATE,"
			+  " 'CHQ' PAYMENTTYPE,'RSAIC Limited' PAYTO,'' PGSERVICEPROVIDER,Rm.Balance_Amount RECEIPT_AMOUNT,Rm.Receipt_Number RECEIPTNUMBER,INS.ID POLID"
			+  " FROM Insurancepolicy INS,PAYMENT PAY,directcredit DC,RECEIPTMASTER RM"
			+  " WHERE Ins.Paymentid=PAY.ID"
			+  " AND PAY.ID=Dc.Fk_Directcreditid"
			+  " AND DC.Receiptnumber=Rm.Receipt_Number"
			+  " AND INS.ID=?1"
			+  " UNION ALL"
			+  " SELECT '' ID,Rm.Cbcnumber CBC,'' TRANSCATION_NO,'' BANKCITY,'S81' DEPOSITINGBANKCODE,'' IFSCCODE,"
			+  " (SELECT MAX(XGENCODE)"
			+  " FROM commonitem"
			+  " WHERE MASTERNAME='BankMaster'"
			+  " AND name        = db.BANKCODE) INSTRUMENTBANK,"
			+  " '' INSTRUMENTBRANCH,'' INSTRUMENTDATE,'' INSTRUMENTEXPDT,'' INSTRUMENTNUMBER,'' INSTRUMENTTYPE,"
			+  " '' ISCUSTOMERPAYMENT,'' ISLOCALINSTRUMENT,'' MICRCODE,'' PAYEENAME,Rm.Cheque_Amount PAYMENTAMOUNT,db.DATEOFREMITTANCE PAYMENTDATE,"
			+  " 'CHQ' PAYMENTTYPE,'RSAIC Limited' PAYTO,'' PGSERVICEPROVIDER,Rm.Balance_Amount RECEIPT_AMOUNT,Rm.Receipt_Number RECEIPTNUMBER,INS.ID POLID"
			+  " FROM Insurancepolicy INS,PAYMENT PAY,Directdebit DB,RECEIPTMASTER RM"
			+  " WHERE Ins.Paymentid=PAY.ID"
			+  " AND PAY.ID=Db.Fk_Directdebitid"
			+  " AND DB.Receiptnumber=Rm.Receipt_Number"
			+  " AND INS.ID=?1"
			+  " UNION ALL"
			+  " SELECT '' ID,Rm.Cbcnumber CBC,Pg.TRANSACTION_NO TRANSCATION_NO,'' BANKCITY,'S81' DEPOSITINGBANKCODE,'' IFSCCODE,"
			+  " '' INSTRUMENTBANK,"
			+  " '' INSTRUMENTBRANCH,'' INSTRUMENTDATE,'' INSTRUMENTEXPDT,'' INSTRUMENTNUMBER,'' INSTRUMENTTYPE,"
			+  " '' ISCUSTOMERPAYMENT,'' ISLOCALINSTRUMENT,'' MICRCODE,'' PAYEENAME,Pg.AMOUNT PAYMENTAMOUNT,pg.TRX_DATE PAYMENTDATE,"
			+  " 'CHQ' PAYMENTTYPE,'RSAIC Limited' PAYTO,'' PGSERVICEPROVIDER,Rm.Balance_Amount RECEIPT_AMOUNT,Rm.Receipt_Number RECEIPTNUMBER,INS.ID POLID"
			+  " FROM Insurancepolicy INS,PAYMENT PAY,PAYMENTGATEWAY PG,RECEIPTMASTER RM"
			+  " WHERE Ins.Paymentid=PAY.ID"
			+  " AND PAY.ID=Pg.Fk_Paymentgatewayid"
			+  " AND PG.Receiptnumber=Rm.Receipt_Number"
			+  " AND INS.ID=?1"
			+  " UNION ALL"
			+  " SELECT '' ID,Rm.Cbcnumber CBC,'' TRANSCATION_NO,'' BANKCITY,'S81' DEPOSITINGBANKCODE,'' IFSCCODE,"
			+  " '' INSTRUMENTBANK,"
			+  " '' INSTRUMENTBRANCH,'' INSTRUMENTDATE,'' INSTRUMENTEXPDT,'' INSTRUMENTNUMBER,'' INSTRUMENTTYPE,"
			+  " '' ISCUSTOMERPAYMENT,'' ISLOCALINSTRUMENT,'' MICRCODE,'' PAYEENAME,Rm.Cheque_Amount PAYMENTAMOUNT,TO_CHAR(TRUNC(Rm.Created_Date),'DD/MM/YYYY') PAYMENTDATE,"
			+  " 'CHQ' PAYMENTTYPE,'RSAIC Limited' PAYTO,'' PGSERVICEPROVIDER,Rm.Balance_Amount RECEIPT_AMOUNT,Rm.Receipt_Number RECEIPTNUMBER,INS.ID POLID"
			+  " FROM Insurancepolicy INS,PAYMENT PAY,CSCPAYMENTGATEWAY CS,RECEIPTMASTER RM"
			+  " WHERE Ins.Paymentid=PAY.ID"
			+  " AND PAY.ID=Cs.Fk_Cscpgpaymentid"
			+  " AND CS.Receiptnumber=Rm.Receipt_Number"
			+  " AND INS.ID=?1"
			+  " UNION ALL"
			+  " SELECT '' ID,Rm.Cbcnumber CBC,'' TRANSCATION_NO,'' BANKCITY,'S81' DEPOSITINGBANKCODE,'' IFSCCODE,"
			+  " (SELECT MAX(XGENCODE)"
			+  " FROM commonitem"
			+  " WHERE MASTERNAME='BankMaster'"
			+  " AND name        = Rm.Cheque_Bank) INSTRUMENTBANK,"
			+  " '' INSTRUMENTBRANCH,'' INSTRUMENTDATE,'' INSTRUMENTEXPDT,Rm.Cheque_Number INSTRUMENTNUMBER,'' INSTRUMENTTYPE,"
			+  " '' ISCUSTOMERPAYMENT,'' ISLOCALINSTRUMENT,'' MICRCODE,'' PAYEENAME,Rm.Cheque_Amount PAYMENTAMOUNT,TO_CHAR(TRUNC(Rm.Created_Date),'DD/MM/YYYY') PAYMENTDATE,"
			+  " 'CHQPAY' PAYMENTTYPE,'RSAIC Limited' PAYTO,'' PGSERVICEPROVIDER,Rm.Balance_Amount RECEIPT_AMOUNT,Rm.Receipt_Number RECEIPTNUMBER,INS.ID POLID"
			+  " FROM Insurancepolicy INS,PAYMENT PAY,AGENTCHEQUE AC,RECEIPTMASTER RM"
			+  " WHERE Ins.Paymentid=PAY.ID"
			+  " AND PAY.ID=Ac.Fk_Agentcheque"
			+  " AND Ac.Receipt_Number=Rm.Receipt_Number"
			+  " AND INS.ID=?1"
			+  " UNION ALL"
			+  " SELECT '' ID,Rm.Cbcnumber CBC,'' TRANSCATION_NO,'' BANKCITY,'S81' DEPOSITINGBANKCODE,'' IFSCCODE,"
			+  " (SELECT MAX(XGENCODE)"
			+  " FROM commonitem"
			+  " WHERE MASTERNAME='BankMaster'"
			+  " AND name        = rm.intermediarybank) INSTRUMENTBANK,"
			+  " '' INSTRUMENTBRANCH,'' INSTRUMENTDATE,'' INSTRUMENTEXPDT,'' INSTRUMENTNUMBER,'' INSTRUMENTTYPE,"
			+  " '' ISCUSTOMERPAYMENT,'' ISLOCALINSTRUMENT,'' MICRCODE,'' PAYEENAME,Rm.Cheque_Amount PAYMENTAMOUNT,TO_CHAR(TRUNC(Rm.Created_Date),'DD/MM/YYYY') PAYMENTDATE,"
			+  " 'CHQ' PAYMENTTYPE,'RSAIC Limited' PAYTO,'' PGSERVICEPROVIDER,Rm.Balance_Amount RECEIPT_AMOUNT,Rm.Receipt_Number RECEIPTNUMBER,INS.ID POLID"
			+  " FROM Insurancepolicy INS,PAYMENT PAY,AGENTNEFT AN,RECEIPTMASTER RM"
			+  " WHERE Ins.Paymentid=PAY.ID"
			+  " AND PAY.ID=An.Fk_Agentneft"
			+  " AND An.Receipt_Number=Rm.Receipt_Number"
			+  " AND INS.ID=?1"
			+  " UNION ALL "
			+  " SELECT '' ID,Rm.Cbcnumber CBC,rm.TRANSACTIONNO TRANSCATION_NO,'' BANKCITY,'S81' DEPOSITINGBANKCODE,'' IFSCCODE,"
			+  " (SELECT MAX(XGENCODE)"
			+  " FROM commonitem"
			+  " WHERE MASTERNAME='BankMaster'"
			+  " AND name        = NVL(rm.creditcardbank,NVL(rm.CHEQUE_BANK,NVL(rm.intermediarybank,rm.bankcode)))) INSTRUMENTBANK,"
			+  " '' INSTRUMENTBRANCH,'' INSTRUMENTDATE,rm.CRECARDEXPIRYDATE INSTRUMENTEXPDT,'' INSTRUMENTNUMBER,Rm.Creditcardtype INSTRUMENTTYPE,"
			+  " '' ISCUSTOMERPAYMENT,'' ISLOCALINSTRUMENT,'' MICRCODE,rm.ACCOUNT_HOLDER_NAME PAYEENAME,Rm.Cheque_Amount PAYMENTAMOUNT,"
			+  " NVL(NVL(rm.CHEQUE_DATE,NVL(rm.TRANSACTIONDATE,NVL(rm.CRECARDTRANDATE,NVL(rm.DATEOFREMITTANCE,NVL(TO_CHAR(TRUNC(rm.RECEIVED_DATE),'dd/mm/yyyy'),rm.VALUE_DATE))))),RP.RECEIPTDATE) PAYMENTDATE, "
			+  " CASE"
			+  " WHEN UPPer(rm.receiptfor)='CASH'"
			+  " THEN 'CASH'"
			+  " ELSE"
			+  " CASE"
			+  " WHEN UPPer(rm.receiptfor) IN ('CHEQUE','DRAFT')"
			+  " THEN 'CHQPAY'"
			+  " ELSE"
			+  " CASE"
			+  " WHEN UPPer(rm.receiptfor) LIKE '%CARD%'"
			+  " THEN 'CARD'"
			+  " ELSE 'CHQ'"
			+  " END"
			+  " END"
			+  " END PAYMENTTYPE,'RSAIC Limited' PAYTO,'' PGSERVICEPROVIDER,Rm.Balance_Amount RECEIPT_AMOUNT,Rm.Receipt_Number RECEIPTNUMBER,INS.ID POLID"
			+  " FROM Insurancepolicy INS,PAYMENT PAY,receiptpayment RP,RECEIPTMASTER RM"
			+  " WHERE Ins.Paymentid=PAY.ID"
			+  " AND PAY.ID=Rp.Fk_Receipts"
			+  " AND Rp.Receiptid=Rm.Receipt_Number"
			+  " AND INS.ID=?1" , nativeQuery = true)
	List<Object> NewPayment(Long  i);
	
	// last receiptpayment NVL(NVL(rm.CHEQUE_NUMBER,rm.CREDITCARDNO),RM.RECEIPT_NUMBER)
	
	
	@Query(value="select 'VOCDEP-'||premium_limit.comp_pricing(ins.id,'DepreciationWaiverPremium') VOCDEP,'VOCBPR-'||premium_limit.ELE_PREMIUM(ins.id,'CommericalODOnly') VOCBPR,'VOCCNG-'||premium_limit.ELE_PREMIUM(ins.id,'CNGLPG') VOCCNG,'VOCGAS-'||premium_limit.ele_premium(ins.id,'CNGKit') VOCGAS,'ROUND1-'||0 ROUND1,'VOCOTR-'||PREMIUM_LIMIT.ELE_PREMIUM(ins.id,'OvertunringCoverage') VOCOTR,'VOCEXG-'||premium_limit.ele_premium(ins.id,'GeoExtension') VOCEXG,'ROUND2-'||0 ROUND2,'VOCATD-'||premium_limit.comp_pricing(ins.id,'TPPDStatutoryDiscount') VOCATD,'VOCLLE-'||premium_limit.comp_premium(ins.id,'LLDriverConductorCleaner') VOCLLE,'VOCEAS-'||premium_limit.ELE_PREMIUM(ins.id,'ElectircalAccessoriess') VOCEAS,'VOCWSG-'||premium_limit.comp_pricing(ins.id,'WindShieldGlassPremium') VOCWSG,'VOCNFE-'||premium_limit.comp_premium(ins.id,'NFPPtoEmployees') VOCNFE,'VOCTDD-'||premium_limit.comp_pricing(ins.id,'AntiTheftDiscount') VOCTDD,'VOCTPL-'||premium_limit.ele_premium(ins.id,'CommercialLiabilityOnly') VOCTPL,'VOCNCD-'||premium_limit.comp_pricing(ins.id,'NoCliamDiscount') VOCNCD,'VOCCM1='||cv.finaldiscount VOCCM1,'VOCIH-'||premium_limit.comp_premium(ins.id,'VOC_HireOrReward') VOCIH,'VOCLLM-'||premium_limit.comp_premium(ins.id,'LegalLiabilitytoPassengers') VOCLLM,'VOCPTM-'||premium_limit.ele_premium(ins.id,'TyreMudguard') VOCPTM,'VOCLLW-'||premium_limit.comp_premium(ins.id,'WLLDriver') VOCLLW,'VOCPND-'||premium_limit.comp_premium(ins.id,'PAPaidDriver') VOCPND,'VOCVES-'||0 VOCVES,'VOCEXL-'||PREMIUM_LIMIT.comp_premium(ins.id,'TP_GeoExtension') VOCEXL,'VOCIPD-'||premium_limit.comp_pricing(ins.id,'OwnPremisesDiscount') VOCIPD,'VOCNFN-'||premium_limit.comp_premium(ins.id,'NFPPtoNonEmployees') VOCNFN,'VOCTOW-'||PREMIUM_LIMIT.ELE_PREMIUM(ins.id,'AdditionalTowingChargesCover') VOCTOW,'VOCPOD-'||premium_limit.comp_premium(ins.id,'PAOwnerDriver') VOCPOD,'SIVOCDEP-'||0 SIVOCDEP,'SIVOCBPR-'||PREMIUM_LIMIT.comp_limit(ins.id,'ODLimit') SIVOCBPR,'SIVOCCNG-'||PREMIUM_LIMIT.comp_limit(ins.id,'CNG_LPGLimit') SIVOCCNG,'SIVOCGAS-'||0 SIVOCGAS,'SIROUND1-'||0 SIROUND1,'SIVOCOTR-'||0 SIVOCOTR,'SIVOCEXG-'||0 SIVOCEXG,'SIROUND2-'||0 SIROUND2,'SIVOCATD-'||PREMIUM_LIMIT.comp_limit(ins.id,'LiabilityLimit') SIVOCATD,'SIVOCLLE-'||0 SIVOCLLE,'SIVOCEAS-'||0 SIVOCEAS,'SIVOCWSG-'||0 SIVOCWSG,'SIVOCNFE-'||0 SIVOCNFE,'SIVOCTDD-'||0 SIVOCTDD,'SIVOCTPL-'||0 SIVOCTPL,'SIVOCNCD-'||0 SIVOCNCD,'SIVOCCM1-'||0 SIVOCCM1,'SIVOCIH-'||0 SIVOCIH,'SIVOCLLM-'||0 SIVOCLLM,'SIVOCPTM-'||0 SIVOCPTM,'SIVOCLLW-'||0 SIVOCLLW,'SIVOCPND-'||premium_limit.ele_limit(ins.id,'PAtoPaidDriverLimit') SIVOCPND,'SIVOCVES-'||0 SIVOCVES,'SIVOCEXL-'||0 SIVOCEXL,'SIVOCIPD-'||0 SIVOCIPD,'SIVOCNFN-'||0 SIVOCNFN,'SIVOCTOW-'||PREMIUM_LIMIT.comp_limit(ins.id,'AdditionalTowingChargesLimit') SIVOCTOW,'SIVOCPOD-'||0 SIVOCPOD,'SIVOCNEA-'||0 SIVOCNEA,'DEDUCTIBLESVOCDEP-'||0 DEDUCTIBLESVOCDEP,'DEDUCTIBLESVOCBPR-'||0 DEDUCTIBLESVOCBPR,'DEDUCTIBLESVOCCNG-'||0 DEDUCTIBLESVOCCNG,'DEDUCTIBLESVOCGAS-'||0 DEDUCTIBLESVOCGAS,'DEDUCTIBLESROUND1-'||0 DEDUCTIBLESROUND1,'DEDUCTIBLESVOCOTR-'||0 DEDUCTIBLESVOCOTR,'DEDUCTIBLESVOCEXG-'||0 DEDUCTIBLESVOCEXG,'DEDUCTIBLESROUND2-'||0 DEDUCTIBLESROUND2,'DEDUCTIBLESVOCATD-'||0 DEDUCTIBLESVOCATD,'DEDUCTIBLESVOCLLE-'||0 DEDUCTIBLESVOCLLE,'DEDUCTIBLESVOCEAS-'||0 DEDUCTIBLESVOCEAS,'DEDUCTIBLESVOCWSG-'||0 DEDUCTIBLESVOCWSG,'DEDUCTIBLESVOCNFE-'||0 DEDUCTIBLESVOCNFE,'DEDUCTIBLESVOCTDD-'||0 DEDUCTIBLESVOCTDD,'DEDUCTIBLESVOCTPL-'||0 DEDUCTIBLESVOCTPL,'DEDUCTIBLESVOCNCD-'||0 DEDUCTIBLESVOCNCD,'DEDUCTIBLESVOCCM1-'||0 DEDUCTIBLESVOCCM1,'DEDUCTIBLESVOCIH-'||0 DEDUCTIBLESVOCIH,'DEDUCTIBLESVOCLLM-'||0 DEDUCTIBLESVOCLLM,'DEDUCTIBLESVOCPTM-'||0 DEDUCTIBLESVOCPTM,'DEDUCTIBLESVOCLLW-'||0 DEDUCTIBLESVOCLLW,'DEDUCTIBLESVOCPND-'||0 DEDUCTIBLESVOCPND,'DEDUCTIBLESVOCVES-'||0 DEDUCTIBLESVOCVES,'DEDUCTIBLESVOCEXL-'||0 DEDUCTIBLESVOCEXL,'DEDUCTIBLESVOCIPD-'||0 DEDUCTIBLESVOCIPD,'DEDUCTIBLESVOCNFN-'||0 DEDUCTIBLESVOCNFN,'DEDUCTIBLESVOCTOW-'||0 DEDUCTIBLESVOCTOW,'DEDUCTIBLESVOCPOD-'||0 DEDUCTIBLESVOCPOD,'DEDUCTIBLESVOCNEA-'||0 DEDUCTIBLESVOCNEA from insurancepolicy ins,Commercialvehicle cv where cv.id=ins.id and ins.id=?1",nativeQuery=true)
	Object VOCCoverage(Long V);
	
	
	@Query(value="select 'DEDUCTIBLESVFATTL2-'||0 DEDUCTIBLESVFATTL2,'DEDUCTIBLESVFATPR2-'||0 DEDUCTIBLESVFATPR2,'VFAVPR-'||premium_limit.ELE_PREMIUM(ins.id,'CommericalODOnly') VFAVPR,'VFATPR-'||NVL(ct1.Trailerodpremium,0) VFATPR,'VFATPR2-'||NVL(ct2.Trailerodpremium,0) VFATPR2,'VFATTL-'||NVL(ct1.Trailertppremium,0) VFATTL, 'VFATTL2-'||NVL(ct2.Trailertppremium,0) VFATTL2,'VFAVTM-'||premium_limit.ele_premium(ins.id,'TyreMudguard') VFAVTM,'VFAVTL-'||premium_limit.ele_premium(ins.id,'CommercialLiabilityOnly') VFAVTL,'VFAVPO-'||premium_limit.comp_premium(ins.id,'PAOwnerDriver') VFAVPO,'VFAVPD-'||premium_limit.comp_premium(ins.id,'PAPaidDriver') VFAVPD,'VFAATD-'||premium_limit.comp_pricing(ins.id,'TPPDStatutoryDiscount') VFAATD,'VFAVNC-'||premium_limit.comp_pricing(ins.id,'NoCliamDiscount') VFAVNC,'VFALLD-'||premium_limit.comp_premium(ins.id,'WLLDriver') VFALLD,'VFAIPD-'||premium_limit.comp_pricing(ins.id,'OwnPremisesDiscount') VFAIPD,'ROUND1-'||0 ROUND1,'ROUND2-'||0 ROUND2,'VFADIS='||0 VFADIS,'VFAACC-'||PREMIUM_LIMIT.ele_premium(ins.id,'ImplementsAccessories') VFAACC,'SIVFAACC-'||PREMIUM_LIMIT.comp_limit(ins.id,'ImplementsAccessoriesLimit')SIVFAACC,'VFAVHR-'||PREMIUM_LIMIT.comp_pricing(ins.id,'ODHireRewardPremium') VFAVHR,'SIVFAVHR-'||0 SIVFAVHR,'VFAVLE-'||PREMIUM_LIMIT.comp_premium(ins.id,'VOC_CooliesThirdPartyCover') VFAVLE,'SIVFAVLE-'||0 SIVFAVLE,'VFATHR-'||PREMIUM_LIMIT.comp_pricing(ins.id,'TPLHireRewardPremium') VFATHR,'SIVFATHR-'||0 SIVFATHR,'RIPDPR-'||PREMIUM_LIMIT.ele_premium(ins.id,'DeathOnlyCover') RIPDPR,'SIRIPDPR-'||PREMIUM_LIMIT.comp_limit(ins.id,'DeathOnlyCoverLimit')SIRIPDPR,'RIPHPS-'||PREMIUM_LIMIT.ele_premium(ins.id,'HospitalizationCover') RIPHPS,'SIRIPHPS-'||PREMIUM_LIMIT.comp_limit(ins.id,'HospitalizationCoverLimit') SIRIPHPS,'SIVFAVPR-'||PREMIUM_LIMIT.comp_limit(ins.id,'ODLimit') SIVFAVPR,'SIVFATPR-'||Ct1.Traileridv SIVFATPR,'SIVFATPR2-'||Ct2.Traileridv SIVFATPR2,'SIVFATTL-'||0 SIVFATTL,'SIVFATTL2-'||0 SIVFATTL2,'SIVFAVTM-'||0 SIVFAVTM,'SIVFAVTL-'||0 SIVFAVTL,'SIVFAVPO-'||0 SIVFAVPO,'SIVFAVPD-'||premium_limit.ele_limit(ins.id,'PAtoPaidDriverLimit') SIVFAVPD,'SIVFAATD-'||PREMIUM_LIMIT.comp_limit(ins.id,'LiabilityLimit') SIVFAATD,'SIVFAVNC-'||0 SIVFAVNC,'SIVFALLD-'||0 SIVFALLD,'SIVFAIPD-'||0 SIVFAIPD,'SIROUND1-'||0 SIROUND1,'SIROUND2-'||0 SIROUND2,'SIVFADIS-'||0 SIVFADIS,'DEDUCTIBLESVFAVPR-'||0 DEDUCTIBLESVFAVPR,'DEDUCTIBLESVFATPR-'||0 DEDUCTIBLESVFATPR,'DEDUCTIBLESVFATTL-'||0 DEDUCTIBLESVFATTL,'DEDUCTIBLESVFAVTM-'||0 DEDUCTIBLESVFAVTM,'DEDUCTIBLESVFAVTL-'||0 DEDUCTIBLESVFAVTL,'DEDUCTIBLESVFAVPO-'||0 DEDUCTIBLESVFAVPO,'DEDUCTIBLESVFAVPD-'||0 DEDUCTIBLESVFAVPD,'DEDUCTIBLESVFAATD-'||0 DEDUCTIBLESVFAATD,'DEDUCTIBLESVFAVNC-'||0 DEDUCTIBLESVFAVNC,'DEDUCTIBLESVFALLD-'||0 DEDUCTIBLESVFALLD,'DEDUCTIBLESVFAIPD-'||0 DEDUCTIBLESVFAIPD,'DEDUCTIBLESROUND1-'||0 DEDUCTIBLESROUND1,'DEDUCTIBLESROUND2-'||0 DEDUCTIBLESROUND2,'DEDUCTIBLESVFADIS-'||0 DEDUCTIBLESVFADIS,'DEDUCTIBLESVFAACC-'||0 DEDUCTIBLESVFAACC,'DEDUCTIBLESVFAVHR-'||0 DEDUCTIBLESVFAVHR,'DEDUCTIBLESVFAVLE-'||0 DEDUCTIBLESVFAVLE,'DEDUCTIBLESVFATHR-'||0 DEDUCTIBLESVFATHR,'DEDUCTIBLESRIPDPR-'||0 DEDUCTIBLESRIPDPR,'DEDUCTIBLESRIPHPS-'||0 DEDUCTIBLESRIPHPS from insurancepolicy ins,Commercialvehicle cv,Commercial_Trailers ct1,Commercial_Trailers ct2 where ins.id=cv.id and cv.id=Ct1.Fk_Commercialid(+) and cv.id=Ct2.Fk_Commercialid(+) and Ct1.Trailer_Index(+)=0 and Ct2.Trailer_Index(+)=1 and ins.id=?1",nativeQuery=true)
	Object VFACoverage(Long s);
	
	@Modifying
	@Transactional
	@Query(value = "update Insurancepolicy  set hasuploaded=?1 ,UPLOADEDDATE=trunc(sysdate) ,UPLOADEDTIME=?2 where policycode=?3",nativeQuery = true)
	Integer UpdateInsurancepolicy(int no,String uploadtime,String polno); 
	
	
	@Modifying
	@Transactional
	@Query(value = "update Insurancepolicy  set hasuploaded=?1 where policycode=?2",nativeQuery = true)
	Integer UpdateInsurancepolicyforfail(int no,String polno); 
	
	@Modifying
	@Transactional
	@Query(value = "update PARTIESINPOLICY  set ISNEWPARTY='NO' where POLICYID=?1",nativeQuery = true)
	Integer UpdatePartiesinpolicyforfail(Long policyid);
	
	@Query(value = "select Actr_Trans_Ref from Firstgenreceiptdetails where Actr_Trans_Ref=?1",nativeQuery = true)
	String findinfirstgen(String idk);
	

	@Query(value = "BEGIN DBMS_SNAPSHOT.REFRESH('FIRSTGENRECEIPTDETAILS'); END;",nativeQuery = true)
	void refreshview();
	
	@Query(value = "select VIEW_REFRESH2(5) from dual",nativeQuery = true)
	String refreshhusingfunction();
	
	@Query(value="with temp as (select EAPPS_RECEIPT_NUMBER_QV(?1) as t from dual) SELECT  trim(regexp_substr(t, '[^,]+', 1, level)) str FROM (SELECT * FROM temp) t CONNECT BY instr(t, ',', 1, level - 1) > 0",nativeQuery=true)
	List<String> recnos(Long payid);
	
	
	@Modifying
	@Transactional
	@Query(value = "update insurancepolicy set  HASUPLOADED=(select DISTINCT hasupload from epl_product) where HASUPLOADED=2",nativeQuery = true)
	void Updatehasuploaded();
	
	
	@Query(value="select d.DOB,d.AGE,d.LICENCE_EXPIRE_DATE,d.LICENCE_ISSUE_DATE,d.sex,D.Experience from DRIVER_DETAILS d where d.id=?1" , nativeQuery = true)
	Object Driverdetails(Long Ids);
	
	@Query(value="select 'VMCPRM-'||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'VMC_ODBasicCover') VMCPRM,'VMCEAS-'||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'VMC_ElecAccessoriesCover') VMCEAS,'VMCVES-'||PREMIUM_LIMIT.COMP_PRICING(INS.ID,'VoluntaryDed') VMCVES,'VMCNCD-'||PREMIUM_LIMIT.COMP_PRICING(INS.ID,'NoCliamDiscount') VMCNCD,'ROUND1-'||0 ROUND1,'VMCTPL-'||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'VMC_ODBasicCover') VMCTPL,'VMCATD-'||PREMIUM_LIMIT.COMP_PRICING(INS.ID,'TPPDStatutoryDiscount') VMCATD,'VMCPOD-'||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'VMC_PAOwnerDriverCover') VMCPOD,'VMCUND-'||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'VMC_PAUnnamed') VMCUND,'VMCLLD-'||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'VMC_LLPaidDriverCover') VMCLLD,'VMCLLE-'||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'VMC_LLEmployees') VMCLLE,'ROUND2-'||0 ROUND2,'VMCTOW-'||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'AdditionalTowingChargesCover') VMCTOW,'VMCPPD-'||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'VMC_PAPaidDriver') VMCPPD,'VMCAAD-'||PREMIUM_LIMIT.COMP_PRICING(INS.ID,'AutoAssociationMembership') VMCAAD,'VMCXGL-'||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'TP_GeoExtension') VMCXGL,'VMCXGE-'||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'VMC_GeoExtnCover') VMCXGE,'VMCNMD-'||PREMIUM_LIMIT.COMP_PREMIUM(INS.ID,'VMC_PANamedPassangers') VMCNMD,'VMCTDD-'||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'AntiTheftDevice') VMCTDD,'VMCNIL-'||0 VMCNIL,'VMCLOA-'||PREMIUM_LIMIT.COMP_PRICING(INS.ID,'ImportedVehicleLoading') VMCLOA,'VMCFGT-'||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'VMC_FiberglassTankCover') VMCFGT,'VMCDTE-'||PREMIUM_LIMIT.ELE_PREMIUM(INS.ID,'DriverTutionExtension') VMCDTE,'VMCSCD-'||PREMIUM_LIMIT.COMP_PRICING(INS.ID,'SideCarDiscount') VMCSCD,'VMCPHD-'||PREMIUM_LIMIT.COMP_PRICING(INS.ID,'DiscountforHandicapped') VMCPHD,'VMCCM1='||mc.finaldiscount VMCCM1,'SIVMCPRM-'||(PREMIUM_LIMIT.COMP_LIMIT(INS.ID,'ODLimit')+premium_limit.COMP_LIMIT(INS.ID,'NonElectricalLimit')) SIVMCPRM,'SIVMCVES-'||PREMIUM_LIMIT.COMP_LIMIT(INS.ID,'ElectricalAccessoriesLimit') SIVMCVES,'SIVMCTPL-'||PREMIUM_LIMIT.COMP_LIMIT(INS.ID,'LiabilityLimit') SIVMCTPL,'SIVMCATD-'||PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'PAtoUnnamedOccupantsLt') SIVMCATD,'SIVMCUND-'||PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'PAtoUnnamedOccupantsLt') SIVMCUND,'SIVMCLLD-'||PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'PANamedOccupantsLimit') SIVMCLLD,'SIVMCLLE-'||PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'PAtoPaidDriverLimit') SIVMCLLE,'SIVMCTOW-'||PREMIUM_LIMIT.COMP_LIMIT(INS.ID,'AdditionalTowingChargesLimit') SIVMCTOW,'SIVMCPPD-'||PREMIUM_LIMIT.ELE_LIMIT(INS.ID,'PAtoPaidDriverLimit') SIVMCPPD,'SIVMCEAS-'||0 SIVMCEAS,'SIVMCNCD-'||0 SIVMCNCD,'SIROUND1-'||0 SIROUND1,'SIVMCPOD-'||0 SIVMCPOD,'SIROUND2-'||0 SIROUND2,'SIVMCAAD-'||0 SIVMCAAD,'SIVMCXGL-'||0 SIVMCXGL,'SIVMCXGE-'||0 SIVMCXGE,'SIVMCNMD-'||0 SIVMCNMD,'SIVMCTDD-'||0 SIVMCTDD,'SIVMCNIL-'||0 SIVMCNIL,'SIVMCBLK-'||0 SIVMCBLK,'SIVMCLOA-'||0 SIVMCLOA,'SIVMCFGT-'||0 SIVMCFGT,'SIVMCDTE-'||0 SIVMCDTE,'SIVMCSCD-'||0 SIVMCSCD,'SIVMCPHD-'||0 SIVMCPHD,'DEDUCTIBLESVMCPRM-'||0  DEDUCTIBLESVMCPRM,'DEDUCTIBLESVMCEAS-'||0  DEDUCTIBLESVMCEAS,'DEDUCTIBLESVMCVES-'||0  DEDUCTIBLESVMCVES,'DEDUCTIBLESVMCNCD-'||0  DEDUCTIBLESVMCNCD,'DEDUCTIBLESROUND1-'||0  DEDUCTIBLESROUND1,'DEDUCTIBLESVMCTPL-'||0  DEDUCTIBLESVMCTPL,'DEDUCTIBLESVMCATD-'||0  DEDUCTIBLESVMCATD,'DEDUCTIBLESVMCPOD-'||0  DEDUCTIBLESVMCPOD,'DEDUCTIBLESVMCUND-'||0  DEDUCTIBLESVMCUND,'DEDUCTIBLESVMCLLD-'||0  DEDUCTIBLESVMCLLD,'DEDUCTIBLESVMCLLE-'||0  DEDUCTIBLESVMCLLE,'DEDUCTIBLESROUND2-'||0  DEDUCTIBLESROUND2,'DEDUCTIBLESVMCTOW-'||0  DEDUCTIBLESVMCTOW,'DEDUCTIBLESVMCPPD-'||0  DEDUCTIBLESVMCPPD,'DEDUCTIBLESVMCAAD-'||0  DEDUCTIBLESVMCAAD,'DEDUCTIBLESVMCXGL-'||0  DEDUCTIBLESVMCXGL,'DEDUCTIBLESVMCXGE-'||0  DEDUCTIBLESVMCXGE,'DEDUCTIBLESVMCNMD-'||0  DEDUCTIBLESVMCNMD,'DEDUCTIBLESVMCTDD-'||0  DEDUCTIBLESVMCTDD,'DEDUCTIBLESVMCNIL-'||0  DEDUCTIBLESVMCNIL,'DEDUCTIBLESVMCBLK-'||0  DEDUCTIBLESVMCBLK,'DEDUCTIBLESVMCLOA-'||0  DEDUCTIBLESVMCLOA,'DEDUCTIBLESVMCFGT-'||0  DEDUCTIBLESVMCFGT,'DEDUCTIBLESVMCDTE-'||0  DEDUCTIBLESVMCDTE,'DEDUCTIBLESVMCSCD-'||0  DEDUCTIBLESVMCSCD,'DEDUCTIBLESVMCPHD-'||0  DEDUCTIBLESVMCPHD from insurancepolicy INS ,motorcycle mc where mc.id=INS.id and INS.id=?1",nativeQuery=true)
	Object Motorcyclecoverage (Long m);
	
}
//'POLID-'||INS.ID POLID,

//'POLID-'||INS.ID POLID,

//cv.finaldiscount


//			+  " SELECT '' ID , Rm.Cbcnumber CBC, Rm.TRANSACTIONNO TRANSCATION_NO,'' BANKCITY,'S81' DEPOSITINGBANKCODE, "
//+ " '' IFSCCODE,'' INSTRUMENTBANK,'' INSTRUMENTBRANCH,'' INSTRUMENTDATE, "
//+ " '' INSTRUMENTEXPDT,'' INSTRUMENTNUMBER,'' INSTRUMENTTYPE,'' ISCUSTOMERPAYMENT, "
//+ " '' ISLOCALINSTRUMENT,'' MICRCODE,'' PAYEENAME, Rm.Cheque_Amount PAYMENTAMOUNT, "
//+ " RP.RECEIPTDATE PAYMENTDATE,'BD' PAYMENTTYPE,'RSAIC Limited' PAYTO, "
//+ " '' PGSERVICEPROVIDER,Rm.Balance_Amount RECEIPT_AMOUNT, Rm.Receipt_Number RECEIPTNUMBER, "
//+ " INS.ID POLID FROM Insurancepolicy INS,PAYMENT PAY,RECEIPTPAYMENT RP, "
//+ " RECEIPTMASTER RM WHERE Ins.Paymentid=PAY.ID AND PAY.ID=RP.FK_RECEIPTS  "
//+ " AND RP.RECEIPTID=Rm.Receipt_Number AND INS.ID=?1 "
//+  " UNION ALL "

