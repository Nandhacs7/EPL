package com.fa.component.policy;
// Generated Feb 17, 2017 1:17:05 PM by Hibernate Tools 4.3.5.Final

//import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
//import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
//import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;
//import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

//import org.hibernate.annotations.GeneratorType;

/**
 * Policyitem generated by hbm2java
 */
@Entity
@Table(name = "POLICYITEM")
@Access(AccessType.PROPERTY)
@Cache(usage=CacheConcurrencyStrategy.READ_WRITE, region="employee")
public class Policyitem implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

/*	@GenericGenerator(name = "custom_PolicyItem", strategy = "native")
	@GeneratedValue(generator = "custom_PolicyItem")*/
//	@Access(AccessType.FIELD)
//	@GenericGenerator(name = "custom_policy", strategy = "sequence" , parameters = {
//			@org.hibernate.annotations.Parameter(name = "sequenceName", value = "sequence"),
//			@org.hibernate.annotations.Parameter(name = "allocationSize", value = "1"),
//	})
//	@GeneratedValue(generator = "custom_policy", strategy=GenerationType.SEQUENCE)  		
//	@GenericGenerator(name = "PolicyItem", strategy = "increment")
//	@GeneratedValue(generator = "PolicyItem") 
	
	@Id
	@Access(AccessType.FIELD)
	@GeneratedValue(strategy=GenerationType.SEQUENCE, generator = "partner_sequence")
	@SequenceGenerator(initialValue=1, allocationSize=1,name = "partner_sequence",sequenceName="POLITEM_SEQ")
	@Column(name = "ITEMID")
	private Long itemid;
/*	private Policy policy;*/
	public Privatecaritem privatecaritem;
//	private Itemnominee itemnominee;
	private Set<Iicoverage> iicoverages = new HashSet<Iicoverage>(0);
	
//    public ItemDriver Driverdetail;
	
	public Policyitem() {
	}

	public Policyitem(Long itemid) {
		this.itemid = itemid;
	}

/*	public Policyitem(Long itemid, Policy policy, Itemnominee itemnominee,
			Set<Iicoverage> iicoverages) {
		this.itemid = itemid;
		this.policy = policy;
		this.iicoverages = iicoverages;

	}*/


	public Long getItemid() {
		return this.itemid;
	}

	public void setItemid(Long itemid) {
		this.itemid = itemid;
	}

/*	@ManyToOne(cascade=CascadeType.ALL,fetch = FetchType.LAZY)
	@JoinColumn(name = "POLID")
	public Policy getPolicy() {
		return this.policy;
	}

	public void setPolicy(Policy policy) {
		this.policy = policy;
	}*/

/*	@OneToOne(cascade=CascadeType.ALL,fetch = FetchType.EAGER)
	@JoinColumn(name="CARID")*/
	@OneToOne(fetch = FetchType.EAGER, mappedBy = "politem", cascade = CascadeType.ALL)
	public Privatecaritem getPrivatecaritem() {
		return this.privatecaritem;
	}

	public void setPrivatecaritem(Privatecaritem privatecaritem) {
		this.privatecaritem = privatecaritem;
	}
//
//	@ManyToOne(fetch = FetchType.LAZY)
//	@JoinColumn(name = "ITEMNOMINEE")
//	public Itemnominee getItemnominee() {
//		return this.itemnominee;
//	}
//
//	public void setItemnominee(Itemnominee itemnominee) {
//		this.itemnominee = itemnominee;
//	}

/*	@OneToMany(cascade=CascadeType.ALL,fetch = FetchType.LAZY, mappedBy = "policyitem")*/
	@OneToMany(cascade=CascadeType.ALL,fetch = FetchType.EAGER)
	@JoinColumn(name = "ITEMID")
	public Set<Iicoverage> getIicoverages() {
		return this.iicoverages;
	}

	public void setIicoverages(Set<Iicoverage> iicoverages) {
		this.iicoverages = iicoverages;
	}
	
//	@OneToOne(cascade=CascadeType.ALL,fetch = FetchType.EAGER)
//	@JoinColumn(name="DRIVERID")
//	public ItemDriver getDriverdetail() {
//		return Driverdetail;
//	}
//
//	public void setDriverdetail(ItemDriver driverdetail) {
//		Driverdetail = driverdetail;
//	}

}
